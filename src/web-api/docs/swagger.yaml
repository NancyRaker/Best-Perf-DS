basePath: '{{.BasePath}}'
definitions:
  model.Account:
    properties:
      address:
        type: string
      c_time:
        type: string
      change_time:
        type: string
      contact:
        type: string
      email:
        type: string
      id:
        type: integer
      ll_time:
        type: string
      nick_name:
        type: string
      phone:
        type: string
      pid:
        type: integer
      privilege_id:
        type: integer
      pwd:
        example: "123456"
        type: string
      remark:
        type: string
      role_id:
        type: integer
      state:
        type: string
      username:
        example: elephant
        type: string
    type: object
  model.AccountClass:
    properties:
      account_name:
        type: string
      account_nickname:
        type: string
      children:
        items:
          $ref: '#/definitions/model.AccountClass'
        type: array
      id:
        type: integer
    type: object
  model.AccountForSwag:
    properties:
      pwd:
        example: "123456"
        type: string
      username:
        example: elephant
        type: string
    required:
    - username
    type: object
  model.Device:
    properties:
      account_id:
        type: integer
      active_time:
        type: string
      change_time:
        type: string
      course:
        type: number
      create_time:
        type: string
      device_type:
        type: string
      gps_data:
        $ref: '#/definitions/model.GPS'
        type: object
      id:
        type: integer
      imei:
        type: string
      last_login_time:
        type: string
      local_time:
        type: integer
      nick_name:
        type: string
      online:
        type: integer
      password:
        type: string
      sale_time:
        type: string
      speed:
        type: number
      user_name:
        type: string
      wifi_des:
        type: string
    type: object
  model.DeviceReceiver:
    properties:
      account_id:
        type: integer
      account_name:
        type: string
    type: object
  model.GPS:
    properties:
      lat:
        type: number
      lng:
        type: number
    type: object
  model.GroupInfo:
    properties:
      account_id:
        type: integer
      c_time:
        type: string
      group_manager:
        items:
          type: integer
        type: array
      group_name:
        type: string
      group_owner:
        type: integer
      id:
        type: integer
      online_num:
        type: integer
      status:
        type: string
    type: object
  model.GroupList:
    properties:
      device_ids:
        items:
          type: integer
        type: array
      device_infos:
        items:
          $ref: '#/definitions/model.User'
        type: array
      group_info:
        $ref: '#/definitions/model.GroupInfo'
        type: object
    type: object
  model.SwagAccount:
    properties:
      address:
        type: string
      c_time:
        type: string
      change_time:
        type: string
      contact:
        type: string
      email:
        type: string
      id:
        type: integer
      ll_time:
        type: string
      nick_name:
        type: string
      phone:
        type: string
      pid:
        type: integer
      privilege_id:
        type: integer
      pwd:
        example: "123456"
        type: string
      remark:
        type: string
      role_id:
        type: integer
      state:
        type: string
      username:
        example: elephant
        type: string
    type: object
  model.SwagAccountDeviceTransReq:
    properties:
      devices:
        items:
          $ref: '#/definitions/model.SwagDevice'
        type: array
      receiver:
        $ref: '#/definitions/model.DeviceReceiver'
        type: object
      sender:
        $ref: '#/definitions/model.SwagAccount'
        type: object
    type: object
  model.SwagAccountImportDeviceReq:
    properties:
      d_type:
        type: string
      devices:
        items:
          $ref: '#/definitions/model.SwagImportDevice'
        type: array
    type: object
  model.SwagAccountPwd:
    properties:
      confirm_pwd:
        example: "123456"
        type: string
      id:
        example: "10"
        type: string
      new_pwd:
        example: "123123"
        type: string
      old_pwd:
        example: "111111"
        type: string
    required:
    - confirm_pwd
    - id
    - new_pwd
    - old_pwd
    type: object
  model.SwagAccountPwdResp:
    properties:
      msg:
        example: Password changed successfully
        type: string
      result:
        example: success
        type: string
    type: object
  model.SwagAccountUpdate:
    properties:
      address:
        type: string
      contact:
        type: string
      email:
        example: 123456789@qq.com
        type: string
      id:
        example: "170"
        type: string
      login_id:
        example: "10"
        type: string
      nick_name:
        type: string
      phone:
        example: "12345671234"
        type: string
      remark:
        type: string
    required:
    - id
    - login_id
    - nick_name
    type: object
  model.SwagAccountUpdateResp:
    properties:
      msg:
        example: update account success
        type: string
      result:
        example: success
        type: string
    type: object
  model.SwagCreateAccount:
    properties:
      address:
        type: string
      confirm_pwd:
        example: "123456"
        type: string
      contact:
        type: string
      email:
        example: 123456789@qq.com
        type: string
      nick_name:
        example: nickDis001
        type: string
      phone:
        example: "12345678455"
        type: string
      pid:
        example: 13
        type: integer
      pwd:
        example: "123456"
        type: string
      remark:
        type: string
      role_id:
        example: 2
        type: integer
      username:
        example: disks007
        type: string
    required:
    - confirm_pwd
    - nick_name
    - pid
    - pwd
    - role_id
    - username
    type: object
  model.SwagCreateAccountResp:
    properties:
      account_id:
        example: "666"
        type: string
      result:
        example: success
        type: string
    type: object
  model.SwagDevice:
    properties:
      account_id:
        type: integer
      active_time:
        type: string
      change_time:
        type: string
      course:
        type: number
      create_time:
        type: string
      device_type:
        type: string
      gps_data:
        $ref: '#/definitions/model.GPS'
        type: object
      id:
        type: integer
      imei:
        type: string
      last_login_time:
        type: string
      local_time:
        type: integer
      nick_name:
        type: string
      password:
        type: string
      sale_time:
        type: string
      speed:
        type: number
      user_name:
        type: string
    type: object
  model.SwagDeviceInfo:
    properties:
      AccountId:
        type: integer
      ActiveTime:
        type: string
      ChangeTime:
        type: string
      CreateTime:
        type: string
      DeviceType:
        type: string
      IMei:
        type: string
      Id:
        type: integer
      LLTime:
        type: string
      NickName:
        type: string
      PassWord:
        type: string
      SaleTime:
        type: string
      UserName:
        type: string
      battery:
        type: integer
      course:
        type: number
      latitude:
        type: number
      localTime:
        type: integer
      longitude:
        type: number
      speed:
        type: number
    type: object
  model.SwagDeviceInfosReq:
    properties:
      DevicesIds:
        example:
        - 2
        items:
          type: integer
        type: array
    type: object
  model.SwagGetAccountClassResp:
    properties:
      result:
        example: success
        type: string
      tree_data:
        $ref: '#/definitions/model.AccountClass'
        type: object
    type: object
  model.SwagGetAccountDeviceResp:
    properties:
      account_info:
        $ref: '#/definitions/model.Account'
        type: object
      devices:
        items:
          $ref: '#/definitions/model.Device'
        type: array
    type: object
  model.SwagGetAccountInfoResp:
    properties:
      account_info:
        type: string
      device_list:
        items:
          $ref: '#/definitions/model.Device'
        type: array
      group_list:
        items:
          $ref: '#/definitions/model.GroupList'
        type: array
      tree_data:
        $ref: '#/definitions/model.AccountClass'
        type: object
    type: object
  model.SwagGetDeviceLocationResp:
    properties:
      Devices:
        items:
          $ref: '#/definitions/model.SwagDeviceInfo'
        type: array
    type: object
  model.SwagImportDevice:
    properties:
      active_time:
        type: string
      device_type:
        type: string
      id:
        type: integer
      imei:
        type: string
      sale_time:
        type: string
    required:
    - active_time
    - device_type
    - id
    - imei
    - sale_time
    type: object
  model.SwagImportDeviceByRootResp:
    properties:
      duli_devices:
        items:
          $ref: '#/definitions/model.SwagDevice'
        type: array
      err_devices:
        items:
          $ref: '#/definitions/model.SwagDevice'
        type: array
      msg:
        type: string
    type: object
  model.SwagTransAccountDeviceResp:
    properties:
      msg:
        example: trans successful
        type: string
      result:
        example: success
        type: string
    type: object
  model.SwagUpdGManagerReq:
    properties:
      AccountId:
        example: 10
        type: integer
      GId:
        example: 2
        type: integer
      RoleType:
        example: 2
        type: integer
      UId:
        example:
        - 8
        items:
          type: integer
        type: array
    type: object
  model.SwagUpdateDeviceInfoResp:
    properties:
      msg:
        example: update device info successfully
        type: string
    type: object
  model.SwagWifi:
    properties:
      bss_id:
        type: string
      des:
        type: string
      id:
        type: integer
      latitude:
        type: number
      level:
        type: integer
      longitude:
        type: number
    type: object
  model.SwagWifiInfoReq:
    properties:
      account_id:
        type: integer
      ops:
        type: integer
      wifis:
        items:
          $ref: '#/definitions/model.SwagWifi'
        type: array
    type: object
  model.User:
    properties:
      account_id:
        description: 只有普通用户才有这个字段，表示这个设备属于哪个账户，如果是非普通用户就是默认为0（因为customer表里面没有0号）
        type: integer
      active_time:
        type: string
      change_time:
        type: string
      create_time:
        type: string
      device_type:
        type: string
      group_type:
        type: integer
      id:
        type: integer
      imei:
        type: string
      last_login_time:
        type: string
      lock_group_id:
        type: integer
      nick_name:
        type: string
      online:
        type: integer
      parent_id:
        description: 如果是普通APP用户和设备注册的时候，默认是0， 如果是上级用户创建下级账户，就用来表示创建者的id
        type: string
      password:
        type: string
      sale_time:
        type: string
      user_name:
        type: string
      user_type:
        description: 用户类型(暂定1是普通用户，2是调度员，3是经销商, 4是超级管理员)
        type: integer
    type: object
host: '{{.Host}}'
info:
  contact: {}
  description: jimi co ptt platform web api.
  license: {}
  title: JiMi Web API
  version: 1.0.1
paths:
  /account:
    post:
      parameters:
      - description: 登录时返回的sessionId
        in: header
        name: Authorization
        required: true
        type: string
      - description: 创建下级账户所用的信息，role_id只能是2、3、4， 低等级不能创建等级高的用户
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/model.SwagCreateAccount'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 操作成功会返回的json内容
          schema:
            $ref: '#/definitions/model.SwagCreateAccountResp'
            type: object
      summary: 创建下级账户
  /account/{account_name}:
    get:
      parameters:
      - description: 当前用户的账号
        in: path
        name: account_name
        required: true
        type: string
      - description: 登录时返回的sessionId
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 正确操作应该返回的数据
          schema:
            $ref: '#/definitions/model.SwagGetAccountInfoResp'
            type: object
      summary: 获取账户信息
  /account/info/update:
    post:
      parameters:
      - description: 登录时返回的sessionId
        in: header
        name: Authorization
        required: true
        type: string
      - description: 更新下级账户的信息，其中id和loginId和NickName不能为空
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/model.SwagAccountUpdate'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 更新下级账户成功应该返回的信息
          schema:
            $ref: '#/definitions/model.SwagAccountUpdateResp'
            type: object
      summary: 更新下级账户信息
  /account/login.do/{account_name}:
    post:
      consumes:
      - application/json
      description: login by account name and pwd
      parameters:
      - description: 登录的用户名，eg：elephant
        in: path
        name: account_name
        required: true
        type: string
      - description: 登录信息，username和pwd必填
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.AccountForSwag'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: '{"session_id": "1c2c46b8-f44a-4073-b219-d93d22dd2a43", "success":
            "true"}'
          schema:
            type: string
      summary: 登录
  /account/logout.do/{account_name}:
    post:
      consumes:
      - application/json
      description: logout by account name and pwd, 请求头中Authorization参数设置为登录时返回的sessionId
      parameters:
      - description: 登录时返回的sessionId eg:1c2c46b8-f44a-4073-b219-d93d22dd2a43
        in: header
        name: Authorization
        required: true
        type: string
      - description: 登录信息，username和pwd必填
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.AccountForSwag'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":"true","msg": "SignOut is successful"}'
          schema:
            type: string
      summary: 退出
  /account/pwd/update:
    post:
      parameters:
      - description: 登录时返回的sessionId
        in: header
        name: Authorization
        required: true
        type: string
      - description: 更新用户密码
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/model.SwagAccountPwd'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 正确处理返回的数据
          schema:
            $ref: '#/definitions/model.SwagAccountPwdResp'
            type: object
      summary: 更新用户密码
  /account_class/{accountId}/{searchId}:
    get:
      parameters:
      - description: 当前用户的账号Id
        in: path
        name: accountId
        required: true
        type: string
      - description: 获取用户下级目录的账号Id
        in: path
        name: searchId
        required: true
        type: string
      - description: 登录时返回的sessionId
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 正确处理返回的数据
          schema:
            $ref: '#/definitions/model.SwagGetAccountClassResp'
            type: object
      summary: 获取账户下级目录
  /account_delete/{accountId}/{deleteId}:
    get:
      parameters:
      - description: 当前用户的账号Id
        in: path
        name: accountId
        required: true
        type: string
      - description: 删除用户下级的账号Id
        in: path
        name: deleteId
        required: true
        type: string
      - description: 登录时返回的sessionId
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: "\t{\"msg\":\"delete account successfully.\",\"result\": \"success\"}"
          schema:
            type: string
      summary: 删除账户下级用户
  /account_device/{accountId}:
    post:
      parameters:
      - description: 登录时返回的sessionId
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前用户的账号Id
        in: path
        name: accountId
        required: true
        type: string
      - description: 转移设备的model
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/model.SwagAccountDeviceTransReq'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 处理正确返回的数据
          schema:
            $ref: '#/definitions/model.SwagTransAccountDeviceResp'
            type: object
      summary: 转移设备
  /account_device/{accountId}/{getAdviceId}:
    get:
      parameters:
      - description: 当前用户的账号Id
        in: path
        name: accountId
        required: true
        type: string
      - description: 获取用户设备信息的账号Id
        in: path
        name: getAdviceId
        required: true
        type: string
      - description: 登录时返回的sessionId
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 正确处理返回的数据
          schema:
            $ref: '#/definitions/model.SwagGetAccountDeviceResp'
            type: object
      summary: 获取账户的设备信息
  /account_device_gps/{accountId}:
    post:
      parameters:
      - description: 登录时返回的sessionId
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前用户的账号Id
        in: path
        name: accountId
        required: true
        type: string
      - description: 获取设备的model
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/model.SwagDeviceInfosReq'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 正确处理返回的数据
          schema:
            $ref: '#/definitions/model.SwagGetDeviceLocationResp'
            type: object
      summary: 获取账户的某些设备gps信息
  /device/import/{account_name}:
    post:
      parameters:
      - description: 登录时返回的sessionId
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前用户的账号
        in: path
        name: account_name
        required: true
        type: string
      - description: 导入设备的model
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/model.SwagAccountImportDeviceReq'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 处理正确返回的数据
          schema:
            $ref: '#/definitions/model.SwagImportDeviceByRootResp'
            type: object
      summary: 导入设备
  /device/update:
    post:
      parameters:
      - description: 登录时返回的sessionId
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前用户的账号
        in: path
        name: account_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 处理正确返回的数据
          schema:
            $ref: '#/definitions/model.SwagUpdateDeviceInfoResp'
            type: object
      summary: 更新设备信息
  /group:
    post:
      consumes:
      - application/json
      description: web创建群组, 请求头中Authorization参数设置为登录时返回的sessionId
      parameters:
      - description: 登录时返回的sessionId
        in: header
        name: Authorization
        required: true
        type: string
      - description: 创建群组
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.GroupList'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":"true","msg": resUpd.ResultMsg.Msg}'
          schema:
            type: string
      summary: web创建群组
  /group/delete:
    post:
      consumes:
      - application/json
      description: web创建群组, 请求头中Authorization参数设置为登录时返回的sessionId
      parameters:
      - description: 登录时返回的sessionId
        in: header
        name: Authorization
        required: true
        type: string
      - description: web更新群组
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.GroupInfo'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":"true","msg": resUpd.ResultMsg.Msg}'
          schema:
            type: string
      summary: web群组删除，目前只更新群组名字
  /group/devices/update:
    post:
      consumes:
      - application/json
      description: logout by account name and pwd, 请求头中Authorization参数设置为登录时返回的sessionId
      parameters:
      - description: 登录时返回的sessionId
        in: header
        name: Authorization
        required: true
        type: string
      - description: 更新群组中的设备
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.GroupList'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":"true","msg": resUpd.ResultMsg.Msg}'
          schema:
            type: string
      summary: web更新群组中的设备
  /group/update:
    post:
      consumes:
      - application/json
      description: web创建群组, 请求头中Authorization参数设置为登录时返回的sessionId
      parameters:
      - description: 登录时返回的sessionId
        in: header
        name: Authorization
        required: true
        type: string
      - description: web更新群组
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.GroupInfo'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":"true","msg": resUpd.ResultMsg.Msg}'
          schema:
            type: string
      summary: web更新群组信息，目前只更新群组名字
  /group_manager/update:
    post:
      consumes:
      - application/json
      description: web更新群组成员是否为管理员, 请求头中Authorization参数设置为登录时返回的sessionId
      parameters:
      - description: 登录时返回的sessionId
        in: header
        name: Authorization
        required: true
        type: string
      - description: web更新群组管理员body内容，注意 RoleType 只能为1或者2， 2是指修改为管理员，1是指修改为普通成员
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.SwagUpdGManagerReq'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":"true","msg": resUpd.ResultMsg.Msg}'
          schema:
            type: string
      summary: web更新群组成员是否为管理员
  /im-server/:
    get:
      parameters:
      - description: 当前用户的账号Id
        in: path
        name: accountId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: "{\"message\":\"User information obtained successfully\",\t\"account_info\":
            ai,\t\"device_list\" deviceAll,\"group_list\": gList,\"tree_data\":resp}"
          schema:
            type: string
      summary: websocket与grpc交换数据
  /upload:
    post:
      parameters:
      - description: 上传文件携带的参数
        in: formData
        name: fileInfo
        required: true
        type: model.ImMsgData
      produces:
      - application/json
      responses:
        "200":
          description: "{\"message\":\"User information obtained successfully\",\t\"account_info\":
            ai,\t\"device_list\" deviceAll,\"group_list\": gList,\"tree_data\":resp}"
          schema:
            type: string
      summary: 上传文件
  /wifi/{accountId}:
    get:
      parameters:
      - description: 当前用户的账号Id
        in: path
        name: accountId
        required: true
        type: string
      - description: 登录时返回的sessionId
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: "\t{\"msg\":\"delete account successfully.\",\"result\": \"success\"}"
          schema:
            type: string
      summary: 获取wifi信息
    post:
      parameters:
      - description: 登录时返回的sessionId
        in: header
        name: Authorization
        required: true
        type: string
      - description: 当前用户的账号Id
        in: path
        name: accountId
        required: true
        type: string
      - description: 获取wifi的model
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/model.SwagWifiInfoReq'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 正确处理返回的数据
          schema:
            $ref: '#/definitions/model.SwagGetDeviceLocationResp'
            type: object
      summary: 增加，删除，修改wifi信息
swagger: "2.0"
