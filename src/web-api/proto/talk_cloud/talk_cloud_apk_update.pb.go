// Code generated by protoc-gen-go. DO NOT EDIT.
// source: talk_cloud_apk_update.proto

package talk_cloud

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ApkUpdateInfo struct {
	PathUrl              string   `protobuf:"bytes,1,opt,name=pathUrl,proto3" json:"pathUrl,omitempty"`
	VersionId            int32    `protobuf:"varint,2,opt,name=versionId,proto3" json:"versionId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApkUpdateInfo) Reset()         { *m = ApkUpdateInfo{} }
func (m *ApkUpdateInfo) String() string { return proto.CompactTextString(m) }
func (*ApkUpdateInfo) ProtoMessage()    {}
func (*ApkUpdateInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_814dd5e450ad290b, []int{0}
}

func (m *ApkUpdateInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApkUpdateInfo.Unmarshal(m, b)
}
func (m *ApkUpdateInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApkUpdateInfo.Marshal(b, m, deterministic)
}
func (m *ApkUpdateInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApkUpdateInfo.Merge(m, src)
}
func (m *ApkUpdateInfo) XXX_Size() int {
	return xxx_messageInfo_ApkUpdateInfo.Size(m)
}
func (m *ApkUpdateInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ApkUpdateInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ApkUpdateInfo proto.InternalMessageInfo

func (m *ApkUpdateInfo) GetPathUrl() string {
	if m != nil {
		return m.PathUrl
	}
	return ""
}

func (m *ApkUpdateInfo) GetVersionId() int32 {
	if m != nil {
		return m.VersionId
	}
	return 0
}

func init() {
	proto.RegisterType((*ApkUpdateInfo)(nil), "talk_cloud.apkUpdateInfo")
}

func init() { proto.RegisterFile("talk_cloud_apk_update.proto", fileDescriptor_814dd5e450ad290b) }

var fileDescriptor_814dd5e450ad290b = []byte{
	// 174 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2e, 0x49, 0xcc, 0xc9,
	0x8e, 0x4f, 0xce, 0xc9, 0x2f, 0x4d, 0x89, 0x4f, 0x2c, 0xc8, 0x8e, 0x2f, 0x2d, 0x48, 0x49, 0x2c,
	0x49, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x42, 0x48, 0x4a, 0x89, 0x21, 0x29, 0xcc,
	0xcd, 0x4f, 0x49, 0xcd, 0x81, 0xa8, 0x51, 0x72, 0xe7, 0xe2, 0x4d, 0x2c, 0xc8, 0x0e, 0x05, 0x6b,
	0xf3, 0xcc, 0x4b, 0xcb, 0x17, 0x92, 0xe0, 0x62, 0x2f, 0x48, 0x2c, 0xc9, 0x08, 0x2d, 0xca, 0x91,
	0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x82, 0x71, 0x85, 0x64, 0xb8, 0x38, 0xcb, 0x52, 0x8b, 0x8a,
	0x33, 0xf3, 0xf3, 0x3c, 0x53, 0x24, 0x98, 0x14, 0x18, 0x35, 0x58, 0x83, 0x10, 0x02, 0x46, 0x21,
	0x5c, 0x02, 0x8e, 0x30, 0x83, 0x82, 0x53, 0x8b, 0xca, 0x32, 0x93, 0x53, 0x85, 0x1c, 0xb8, 0x78,
	0x21, 0x02, 0x8e, 0x05, 0xd9, 0x60, 0xc3, 0x25, 0xf5, 0x10, 0xce, 0xd0, 0x43, 0xb1, 0x57, 0x4a,
	0x08, 0x59, 0x2a, 0x28, 0xb5, 0xb8, 0x34, 0xa7, 0x44, 0x89, 0x21, 0x89, 0x0d, 0xec, 0x4a, 0x63,
	0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x51, 0xb2, 0x0b, 0x92, 0xe8, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ApkUpdateServiceClient is the client API for ApkUpdateService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ApkUpdateServiceClient interface {
	// 更改apk的url和版本号
	UpdateApkInfo(ctx context.Context, in *ApkUpdateInfo, opts ...grpc.CallOption) (*Result, error)
}

type apkUpdateServiceClient struct {
	cc *grpc.ClientConn
}

func NewApkUpdateServiceClient(cc *grpc.ClientConn) ApkUpdateServiceClient {
	return &apkUpdateServiceClient{cc}
}

func (c *apkUpdateServiceClient) UpdateApkInfo(ctx context.Context, in *ApkUpdateInfo, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/talk_cloud.ApkUpdateService/UpdateApkInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ApkUpdateServiceServer is the server API for ApkUpdateService service.
type ApkUpdateServiceServer interface {
	// 更改apk的url和版本号
	UpdateApkInfo(context.Context, *ApkUpdateInfo) (*Result, error)
}

// UnimplementedApkUpdateServiceServer can be embedded to have forward compatible implementations.
type UnimplementedApkUpdateServiceServer struct {
}

func (*UnimplementedApkUpdateServiceServer) UpdateApkInfo(ctx context.Context, req *ApkUpdateInfo) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateApkInfo not implemented")
}

func RegisterApkUpdateServiceServer(s *grpc.Server, srv ApkUpdateServiceServer) {
	s.RegisterService(&_ApkUpdateService_serviceDesc, srv)
}

func _ApkUpdateService_UpdateApkInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApkUpdateInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApkUpdateServiceServer).UpdateApkInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/talk_cloud.ApkUpdateService/UpdateApkInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApkUpdateServiceServer).UpdateApkInfo(ctx, req.(*ApkUpdateInfo))
	}
	return interceptor(ctx, in, info, handler)
}

var _ApkUpdateService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "talk_cloud.ApkUpdateService",
	HandlerType: (*ApkUpdateServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateApkInfo",
			Handler:    _ApkUpdateService_UpdateApkInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "talk_cloud_apk_update.proto",
}
