// Code generated by protoc-gen-go. DO NOT EDIT.
// source: talk_cloud_nfc.proto

package talk_cloud

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 查询某个调度员名下的tag信息请求数据
type GetTagsInfoReq struct {
	// 调度员的Id
	AccountId            int32    `protobuf:"varint,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTagsInfoReq) Reset()         { *m = GetTagsInfoReq{} }
func (m *GetTagsInfoReq) String() string { return proto.CompactTextString(m) }
func (*GetTagsInfoReq) ProtoMessage()    {}
func (*GetTagsInfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_28a6e429b7fd367c, []int{0}
}

func (m *GetTagsInfoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTagsInfoReq.Unmarshal(m, b)
}
func (m *GetTagsInfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTagsInfoReq.Marshal(b, m, deterministic)
}
func (m *GetTagsInfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTagsInfoReq.Merge(m, src)
}
func (m *GetTagsInfoReq) XXX_Size() int {
	return xxx_messageInfo_GetTagsInfoReq.Size(m)
}
func (m *GetTagsInfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTagsInfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetTagsInfoReq proto.InternalMessageInfo

func (m *GetTagsInfoReq) GetAccountId() int32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

// 查询Tags信息返回的数据
type GetTagsInfoResp struct {
	// 查询调度员名下所有的Tags信息
	Tags                 []*Tag   `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTagsInfoResp) Reset()         { *m = GetTagsInfoResp{} }
func (m *GetTagsInfoResp) String() string { return proto.CompactTextString(m) }
func (*GetTagsInfoResp) ProtoMessage()    {}
func (*GetTagsInfoResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_28a6e429b7fd367c, []int{1}
}

func (m *GetTagsInfoResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTagsInfoResp.Unmarshal(m, b)
}
func (m *GetTagsInfoResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTagsInfoResp.Marshal(b, m, deterministic)
}
func (m *GetTagsInfoResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTagsInfoResp.Merge(m, src)
}
func (m *GetTagsInfoResp) XXX_Size() int {
	return xxx_messageInfo_GetTagsInfoResp.Size(m)
}
func (m *GetTagsInfoResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTagsInfoResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetTagsInfoResp proto.InternalMessageInfo

func (m *GetTagsInfoResp) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

// 操作Tags信息的请求数据
type TagsInfoReq struct {
	// 需要保存、修改或删除的Tags信息的数据
	Tags []*Tag `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
	// 调用这个方法的目的是对Tags信息数据进行保存、修改或删除作说明。1 保存， 2 修改， 3 删除
	Ops int32 `protobuf:"varint,2,opt,name=ops,proto3" json:"ops,omitempty"`
	// 调度员的id
	AccountId            int32    `protobuf:"varint,3,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TagsInfoReq) Reset()         { *m = TagsInfoReq{} }
func (m *TagsInfoReq) String() string { return proto.CompactTextString(m) }
func (*TagsInfoReq) ProtoMessage()    {}
func (*TagsInfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_28a6e429b7fd367c, []int{2}
}

func (m *TagsInfoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TagsInfoReq.Unmarshal(m, b)
}
func (m *TagsInfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TagsInfoReq.Marshal(b, m, deterministic)
}
func (m *TagsInfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TagsInfoReq.Merge(m, src)
}
func (m *TagsInfoReq) XXX_Size() int {
	return xxx_messageInfo_TagsInfoReq.Size(m)
}
func (m *TagsInfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TagsInfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_TagsInfoReq proto.InternalMessageInfo

func (m *TagsInfoReq) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *TagsInfoReq) GetOps() int32 {
	if m != nil {
		return m.Ops
	}
	return 0
}

func (m *TagsInfoReq) GetAccountId() int32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

// 操作Tags信息的返回数据
type TagsInfoResp struct {
	Res                  *Result  `protobuf:"bytes,1,opt,name=Res,proto3" json:"Res,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TagsInfoResp) Reset()         { *m = TagsInfoResp{} }
func (m *TagsInfoResp) String() string { return proto.CompactTextString(m) }
func (*TagsInfoResp) ProtoMessage()    {}
func (*TagsInfoResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_28a6e429b7fd367c, []int{3}
}

func (m *TagsInfoResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TagsInfoResp.Unmarshal(m, b)
}
func (m *TagsInfoResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TagsInfoResp.Marshal(b, m, deterministic)
}
func (m *TagsInfoResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TagsInfoResp.Merge(m, src)
}
func (m *TagsInfoResp) XXX_Size() int {
	return xxx_messageInfo_TagsInfoResp.Size(m)
}
func (m *TagsInfoResp) XXX_DiscardUnknown() {
	xxx_messageInfo_TagsInfoResp.DiscardUnknown(m)
}

var xxx_messageInfo_TagsInfoResp proto.InternalMessageInfo

func (m *TagsInfoResp) GetRes() *Result {
	if m != nil {
		return m.Res
	}
	return nil
}

// tag数据模型
type Tag struct {
	// 标签tag的id
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 标签名字
	TagName string `protobuf:"bytes,2,opt,name=tag_name,json=tagName,proto3" json:"tag_name,omitempty"`
	// 标签的地址
	TagAddr string `protobuf:"bytes,3,opt,name=tag_addr,json=tagAddr,proto3" json:"tag_addr,omitempty"`
	// 标签导入的调度员
	AccountId int32 `protobuf:"varint,4,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// 标签插入数据库的创建时间
	CreateTimestamp string `protobuf:"bytes,5,opt,name=create_timestamp,json=createTimestamp,proto3" json:"create_timestamp,omitempty"`
	// 标签导入的时间
	ImportTimestamp uint64 `protobuf:"varint,6,opt,name=import_timestamp,json=importTimestamp,proto3" json:"import_timestamp,omitempty"`
	//uuid
	Uuid                 string   `protobuf:"bytes,7,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tag) Reset()         { *m = Tag{} }
func (m *Tag) String() string { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()    {}
func (*Tag) Descriptor() ([]byte, []int) {
	return fileDescriptor_28a6e429b7fd367c, []int{4}
}

func (m *Tag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tag.Unmarshal(m, b)
}
func (m *Tag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tag.Marshal(b, m, deterministic)
}
func (m *Tag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tag.Merge(m, src)
}
func (m *Tag) XXX_Size() int {
	return xxx_messageInfo_Tag.Size(m)
}
func (m *Tag) XXX_DiscardUnknown() {
	xxx_messageInfo_Tag.DiscardUnknown(m)
}

var xxx_messageInfo_Tag proto.InternalMessageInfo

func (m *Tag) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Tag) GetTagName() string {
	if m != nil {
		return m.TagName
	}
	return ""
}

func (m *Tag) GetTagAddr() string {
	if m != nil {
		return m.TagAddr
	}
	return ""
}

func (m *Tag) GetAccountId() int32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *Tag) GetCreateTimestamp() string {
	if m != nil {
		return m.CreateTimestamp
	}
	return ""
}

func (m *Tag) GetImportTimestamp() uint64 {
	if m != nil {
		return m.ImportTimestamp
	}
	return 0
}

func (m *Tag) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

// 查询某个调度员名下的tag信息请求数据
type GetTagTasksListReq struct {
	// 调度员的Id
	AccountId            int32    `protobuf:"varint,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTagTasksListReq) Reset()         { *m = GetTagTasksListReq{} }
func (m *GetTagTasksListReq) String() string { return proto.CompactTextString(m) }
func (*GetTagTasksListReq) ProtoMessage()    {}
func (*GetTagTasksListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_28a6e429b7fd367c, []int{5}
}

func (m *GetTagTasksListReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTagTasksListReq.Unmarshal(m, b)
}
func (m *GetTagTasksListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTagTasksListReq.Marshal(b, m, deterministic)
}
func (m *GetTagTasksListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTagTasksListReq.Merge(m, src)
}
func (m *GetTagTasksListReq) XXX_Size() int {
	return xxx_messageInfo_GetTagTasksListReq.Size(m)
}
func (m *GetTagTasksListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTagTasksListReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetTagTasksListReq proto.InternalMessageInfo

func (m *GetTagTasksListReq) GetAccountId() int32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

// 查询Tags信息返回的数据
type GetTagTasksListResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTagTasksListResp) Reset()         { *m = GetTagTasksListResp{} }
func (m *GetTagTasksListResp) String() string { return proto.CompactTextString(m) }
func (*GetTagTasksListResp) ProtoMessage()    {}
func (*GetTagTasksListResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_28a6e429b7fd367c, []int{6}
}

func (m *GetTagTasksListResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTagTasksListResp.Unmarshal(m, b)
}
func (m *GetTagTasksListResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTagTasksListResp.Marshal(b, m, deterministic)
}
func (m *GetTagTasksListResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTagTasksListResp.Merge(m, src)
}
func (m *GetTagTasksListResp) XXX_Size() int {
	return xxx_messageInfo_GetTagTasksListResp.Size(m)
}
func (m *GetTagTasksListResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTagTasksListResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetTagTasksListResp proto.InternalMessageInfo

// 操作Tag Tasks List信息的请求数据
type TagTasksListReq struct {
	// 需要保存、修改或删除的Tags信息的数据
	TagTaskLists []*TagTaskListNode `protobuf:"bytes,1,rep,name=tag_task_lists,json=tagTaskLists,proto3" json:"tag_task_lists,omitempty"`
	// 调用这个方法的目的是对Tag Tasks List信息数据进行保存、修改或删除作说明。1 保存， 2 修改， 3 删除
	Ops int32 `protobuf:"varint,2,opt,name=ops,proto3" json:"ops,omitempty"`
	// 调度员的id
	AccountId            int32    `protobuf:"varint,3,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TagTasksListReq) Reset()         { *m = TagTasksListReq{} }
func (m *TagTasksListReq) String() string { return proto.CompactTextString(m) }
func (*TagTasksListReq) ProtoMessage()    {}
func (*TagTasksListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_28a6e429b7fd367c, []int{7}
}

func (m *TagTasksListReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TagTasksListReq.Unmarshal(m, b)
}
func (m *TagTasksListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TagTasksListReq.Marshal(b, m, deterministic)
}
func (m *TagTasksListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TagTasksListReq.Merge(m, src)
}
func (m *TagTasksListReq) XXX_Size() int {
	return xxx_messageInfo_TagTasksListReq.Size(m)
}
func (m *TagTasksListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TagTasksListReq.DiscardUnknown(m)
}

var xxx_messageInfo_TagTasksListReq proto.InternalMessageInfo

func (m *TagTasksListReq) GetTagTaskLists() []*TagTaskListNode {
	if m != nil {
		return m.TagTaskLists
	}
	return nil
}

func (m *TagTasksListReq) GetOps() int32 {
	if m != nil {
		return m.Ops
	}
	return 0
}

func (m *TagTasksListReq) GetAccountId() int32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

// 操作Tags信息的返回数据
type TagTasksListResp struct {
	Res                  *Result  `protobuf:"bytes,1,opt,name=Res,proto3" json:"Res,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TagTasksListResp) Reset()         { *m = TagTasksListResp{} }
func (m *TagTasksListResp) String() string { return proto.CompactTextString(m) }
func (*TagTasksListResp) ProtoMessage()    {}
func (*TagTasksListResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_28a6e429b7fd367c, []int{8}
}

func (m *TagTasksListResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TagTasksListResp.Unmarshal(m, b)
}
func (m *TagTasksListResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TagTasksListResp.Marshal(b, m, deterministic)
}
func (m *TagTasksListResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TagTasksListResp.Merge(m, src)
}
func (m *TagTasksListResp) XXX_Size() int {
	return xxx_messageInfo_TagTasksListResp.Size(m)
}
func (m *TagTasksListResp) XXX_DiscardUnknown() {
	xxx_messageInfo_TagTasksListResp.DiscardUnknown(m)
}

var xxx_messageInfo_TagTasksListResp proto.InternalMessageInfo

func (m *TagTasksListResp) GetRes() *Result {
	if m != nil {
		return m.Res
	}
	return nil
}

type TagTaskListNode struct {
	// task的id
	TagTaskId int64 `protobuf:"varint,1,opt,name=tag_task_id,json=tagTaskId,proto3" json:"tag_task_id,omitempty"`
	// 该任务应该打卡的打卡节点
	TagTaskNodes []*TagTaskNode `protobuf:"bytes,2,rep,name=tag_task_nodes,json=tagTaskNodes,proto3" json:"tag_task_nodes,omitempty"`
	// 调度员id
	AccountId int32 `protobuf:"varint,3,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// 发送该任务的邮箱
	SendEmail string `protobuf:"bytes,4,opt,name=send_email,json=sendEmail,proto3" json:"send_email,omitempty"`
	// 发送该任务的时间
	SendTime uint64 `protobuf:"varint,5,opt,name=send_time,json=sendTime,proto3" json:"send_time,omitempty"`
	// 任务名称
	TaskName string `protobuf:"bytes,6,opt,name=task_name,json=taskName,proto3" json:"task_name,omitempty"`
	// 任务时区
	TimeZone string `protobuf:"bytes,7,opt,name=time_zone,json=timeZone,proto3" json:"time_zone,omitempty"`
	// 任务保存时间
	SaveTime             int64    `protobuf:"varint,8,opt,name=save_time,json=saveTime,proto3" json:"save_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TagTaskListNode) Reset()         { *m = TagTaskListNode{} }
func (m *TagTaskListNode) String() string { return proto.CompactTextString(m) }
func (*TagTaskListNode) ProtoMessage()    {}
func (*TagTaskListNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_28a6e429b7fd367c, []int{9}
}

func (m *TagTaskListNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TagTaskListNode.Unmarshal(m, b)
}
func (m *TagTaskListNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TagTaskListNode.Marshal(b, m, deterministic)
}
func (m *TagTaskListNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TagTaskListNode.Merge(m, src)
}
func (m *TagTaskListNode) XXX_Size() int {
	return xxx_messageInfo_TagTaskListNode.Size(m)
}
func (m *TagTaskListNode) XXX_DiscardUnknown() {
	xxx_messageInfo_TagTaskListNode.DiscardUnknown(m)
}

var xxx_messageInfo_TagTaskListNode proto.InternalMessageInfo

func (m *TagTaskListNode) GetTagTaskId() int64 {
	if m != nil {
		return m.TagTaskId
	}
	return 0
}

func (m *TagTaskListNode) GetTagTaskNodes() []*TagTaskNode {
	if m != nil {
		return m.TagTaskNodes
	}
	return nil
}

func (m *TagTaskListNode) GetAccountId() int32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *TagTaskListNode) GetSendEmail() string {
	if m != nil {
		return m.SendEmail
	}
	return ""
}

func (m *TagTaskListNode) GetSendTime() uint64 {
	if m != nil {
		return m.SendTime
	}
	return 0
}

func (m *TagTaskListNode) GetTaskName() string {
	if m != nil {
		return m.TaskName
	}
	return ""
}

func (m *TagTaskListNode) GetTimeZone() string {
	if m != nil {
		return m.TimeZone
	}
	return ""
}

func (m *TagTaskListNode) GetSaveTime() int64 {
	if m != nil {
		return m.SaveTime
	}
	return 0
}

// 标签打卡任务节点
type TagTaskNode struct {
	// 打卡任务中某个打卡点的id
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 调度员id
	AccountId int32 `protobuf:"varint,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// 打卡设备的id
	DeviceId int32 `protobuf:"varint,3,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	// 标签tag的id
	TagId int32 `protobuf:"varint,4,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
	// 预定打卡起始的的时间戳
	OrderStartTime uint64 `protobuf:"varint,5,opt,name=order_start_time,json=orderStartTime,proto3" json:"order_start_time,omitempty"`
	// 预定打卡的结束时间戳
	OrderEndTime uint64 `protobuf:"varint,6,opt,name=order_end_time,json=orderEndTime,proto3" json:"order_end_time,omitempty"`
	// 是否已经打卡
	IsClock int32 `protobuf:"varint,7,opt,name=is_clock,json=isClock,proto3" json:"is_clock,omitempty"`
	// 如果已经打卡，这就是打卡的时间戳
	ClockTime uint64 `protobuf:"varint,8,opt,name=clock_time,json=clockTime,proto3" json:"clock_time,omitempty"`
	// 任务节点下发的时间
	CreateTime string `protobuf:"bytes,9,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// 标签名字
	TagName              string   `protobuf:"bytes,10,opt,name=tag_name,json=tagName,proto3" json:"tag_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TagTaskNode) Reset()         { *m = TagTaskNode{} }
func (m *TagTaskNode) String() string { return proto.CompactTextString(m) }
func (*TagTaskNode) ProtoMessage()    {}
func (*TagTaskNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_28a6e429b7fd367c, []int{10}
}

func (m *TagTaskNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TagTaskNode.Unmarshal(m, b)
}
func (m *TagTaskNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TagTaskNode.Marshal(b, m, deterministic)
}
func (m *TagTaskNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TagTaskNode.Merge(m, src)
}
func (m *TagTaskNode) XXX_Size() int {
	return xxx_messageInfo_TagTaskNode.Size(m)
}
func (m *TagTaskNode) XXX_DiscardUnknown() {
	xxx_messageInfo_TagTaskNode.DiscardUnknown(m)
}

var xxx_messageInfo_TagTaskNode proto.InternalMessageInfo

func (m *TagTaskNode) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TagTaskNode) GetAccountId() int32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *TagTaskNode) GetDeviceId() int32 {
	if m != nil {
		return m.DeviceId
	}
	return 0
}

func (m *TagTaskNode) GetTagId() int32 {
	if m != nil {
		return m.TagId
	}
	return 0
}

func (m *TagTaskNode) GetOrderStartTime() uint64 {
	if m != nil {
		return m.OrderStartTime
	}
	return 0
}

func (m *TagTaskNode) GetOrderEndTime() uint64 {
	if m != nil {
		return m.OrderEndTime
	}
	return 0
}

func (m *TagTaskNode) GetIsClock() int32 {
	if m != nil {
		return m.IsClock
	}
	return 0
}

func (m *TagTaskNode) GetClockTime() uint64 {
	if m != nil {
		return m.ClockTime
	}
	return 0
}

func (m *TagTaskNode) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

func (m *TagTaskNode) GetTagName() string {
	if m != nil {
		return m.TagName
	}
	return ""
}

// 设备任务查询
type DeviceTasksReq struct {
	// 调度员id
	AccountId int32 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// 设备id
	DeviceId             int32    `protobuf:"varint,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceTasksReq) Reset()         { *m = DeviceTasksReq{} }
func (m *DeviceTasksReq) String() string { return proto.CompactTextString(m) }
func (*DeviceTasksReq) ProtoMessage()    {}
func (*DeviceTasksReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_28a6e429b7fd367c, []int{11}
}

func (m *DeviceTasksReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceTasksReq.Unmarshal(m, b)
}
func (m *DeviceTasksReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceTasksReq.Marshal(b, m, deterministic)
}
func (m *DeviceTasksReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceTasksReq.Merge(m, src)
}
func (m *DeviceTasksReq) XXX_Size() int {
	return xxx_messageInfo_DeviceTasksReq.Size(m)
}
func (m *DeviceTasksReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceTasksReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceTasksReq proto.InternalMessageInfo

func (m *DeviceTasksReq) GetAccountId() int32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *DeviceTasksReq) GetDeviceId() int32 {
	if m != nil {
		return m.DeviceId
	}
	return 0
}

// 设备任务查询返回的内容
type DeviceTasksResp struct {
	SingleDeviceTaskList []*DeviceTaskNode `protobuf:"bytes,1,rep,name=single_device_task_list,json=singleDeviceTaskList,proto3" json:"single_device_task_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *DeviceTasksResp) Reset()         { *m = DeviceTasksResp{} }
func (m *DeviceTasksResp) String() string { return proto.CompactTextString(m) }
func (*DeviceTasksResp) ProtoMessage()    {}
func (*DeviceTasksResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_28a6e429b7fd367c, []int{12}
}

func (m *DeviceTasksResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceTasksResp.Unmarshal(m, b)
}
func (m *DeviceTasksResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceTasksResp.Marshal(b, m, deterministic)
}
func (m *DeviceTasksResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceTasksResp.Merge(m, src)
}
func (m *DeviceTasksResp) XXX_Size() int {
	return xxx_messageInfo_DeviceTasksResp.Size(m)
}
func (m *DeviceTasksResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceTasksResp.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceTasksResp proto.InternalMessageInfo

func (m *DeviceTasksResp) GetSingleDeviceTaskList() []*DeviceTaskNode {
	if m != nil {
		return m.SingleDeviceTaskList
	}
	return nil
}

// 设备应该执行的任务节点
type DeviceTaskNode struct {
	// 任务id
	TagTaskId int64 `protobuf:"varint,1,opt,name=tag_task_id,json=tagTaskId,proto3" json:"tag_task_id,omitempty"`
	// 任务名字
	TaskName string `protobuf:"bytes,2,opt,name=task_name,json=taskName,proto3" json:"task_name,omitempty"`
	// 任务保存时间
	SaveTime int64 `protobuf:"varint,3,opt,name=save_time,json=saveTime,proto3" json:"save_time,omitempty"`
	// 设备在该任务中应该打卡的标签点
	TagList              []string `protobuf:"bytes,4,rep,name=tag_list,json=tagList,proto3" json:"tag_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceTaskNode) Reset()         { *m = DeviceTaskNode{} }
func (m *DeviceTaskNode) String() string { return proto.CompactTextString(m) }
func (*DeviceTaskNode) ProtoMessage()    {}
func (*DeviceTaskNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_28a6e429b7fd367c, []int{13}
}

func (m *DeviceTaskNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceTaskNode.Unmarshal(m, b)
}
func (m *DeviceTaskNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceTaskNode.Marshal(b, m, deterministic)
}
func (m *DeviceTaskNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceTaskNode.Merge(m, src)
}
func (m *DeviceTaskNode) XXX_Size() int {
	return xxx_messageInfo_DeviceTaskNode.Size(m)
}
func (m *DeviceTaskNode) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceTaskNode.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceTaskNode proto.InternalMessageInfo

func (m *DeviceTaskNode) GetTagTaskId() int64 {
	if m != nil {
		return m.TagTaskId
	}
	return 0
}

func (m *DeviceTaskNode) GetTaskName() string {
	if m != nil {
		return m.TaskName
	}
	return ""
}

func (m *DeviceTaskNode) GetSaveTime() int64 {
	if m != nil {
		return m.SaveTime
	}
	return 0
}

func (m *DeviceTaskNode) GetTagList() []string {
	if m != nil {
		return m.TagList
	}
	return nil
}

// 单个任务的查询
type TaskDetailReq struct {
	// 调度员id
	AccountId int32 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// 任务id
	TaskId               int32    `protobuf:"varint,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskDetailReq) Reset()         { *m = TaskDetailReq{} }
func (m *TaskDetailReq) String() string { return proto.CompactTextString(m) }
func (*TaskDetailReq) ProtoMessage()    {}
func (*TaskDetailReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_28a6e429b7fd367c, []int{14}
}

func (m *TaskDetailReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskDetailReq.Unmarshal(m, b)
}
func (m *TaskDetailReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskDetailReq.Marshal(b, m, deterministic)
}
func (m *TaskDetailReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskDetailReq.Merge(m, src)
}
func (m *TaskDetailReq) XXX_Size() int {
	return xxx_messageInfo_TaskDetailReq.Size(m)
}
func (m *TaskDetailReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskDetailReq.DiscardUnknown(m)
}

var xxx_messageInfo_TaskDetailReq proto.InternalMessageInfo

func (m *TaskDetailReq) GetAccountId() int32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *TaskDetailReq) GetTaskId() int32 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

// 查询任务细节结构体
type TaskDetailResp struct {
	TaskDetail           *TaskDetail `protobuf:"bytes,1,opt,name=task_detail,json=taskDetail,proto3" json:"task_detail,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *TaskDetailResp) Reset()         { *m = TaskDetailResp{} }
func (m *TaskDetailResp) String() string { return proto.CompactTextString(m) }
func (*TaskDetailResp) ProtoMessage()    {}
func (*TaskDetailResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_28a6e429b7fd367c, []int{15}
}

func (m *TaskDetailResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskDetailResp.Unmarshal(m, b)
}
func (m *TaskDetailResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskDetailResp.Marshal(b, m, deterministic)
}
func (m *TaskDetailResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskDetailResp.Merge(m, src)
}
func (m *TaskDetailResp) XXX_Size() int {
	return xxx_messageInfo_TaskDetailResp.Size(m)
}
func (m *TaskDetailResp) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskDetailResp.DiscardUnknown(m)
}

var xxx_messageInfo_TaskDetailResp proto.InternalMessageInfo

func (m *TaskDetailResp) GetTaskDetail() *TaskDetail {
	if m != nil {
		return m.TaskDetail
	}
	return nil
}

// 任务细节
type TaskDetail struct {
	TagNodes             []*TagNode `protobuf:"bytes,1,rep,name=tag_nodes,json=tagNodes,proto3" json:"tag_nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TaskDetail) Reset()         { *m = TaskDetail{} }
func (m *TaskDetail) String() string { return proto.CompactTextString(m) }
func (*TaskDetail) ProtoMessage()    {}
func (*TaskDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_28a6e429b7fd367c, []int{16}
}

func (m *TaskDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskDetail.Unmarshal(m, b)
}
func (m *TaskDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskDetail.Marshal(b, m, deterministic)
}
func (m *TaskDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskDetail.Merge(m, src)
}
func (m *TaskDetail) XXX_Size() int {
	return xxx_messageInfo_TaskDetail.Size(m)
}
func (m *TaskDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskDetail.DiscardUnknown(m)
}

var xxx_messageInfo_TaskDetail proto.InternalMessageInfo

func (m *TaskDetail) GetTagNodes() []*TagNode {
	if m != nil {
		return m.TagNodes
	}
	return nil
}

// 标签节点
type TagNode struct {
	// 标签的id
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 标签的名字
	TagName string `protobuf:"bytes,2,opt,name=tag_name,json=tagName,proto3" json:"tag_name,omitempty"`
	// 标签打卡的起始时间时间戳
	OrderStartTime uint64 `protobuf:"varint,3,opt,name=order_start_time,json=orderStartTime,proto3" json:"order_start_time,omitempty"`
	// 标签打卡的结束时间的时间戳
	OrderEndTime         uint64   `protobuf:"varint,4,opt,name=order_end_time,json=orderEndTime,proto3" json:"order_end_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TagNode) Reset()         { *m = TagNode{} }
func (m *TagNode) String() string { return proto.CompactTextString(m) }
func (*TagNode) ProtoMessage()    {}
func (*TagNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_28a6e429b7fd367c, []int{17}
}

func (m *TagNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TagNode.Unmarshal(m, b)
}
func (m *TagNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TagNode.Marshal(b, m, deterministic)
}
func (m *TagNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TagNode.Merge(m, src)
}
func (m *TagNode) XXX_Size() int {
	return xxx_messageInfo_TagNode.Size(m)
}
func (m *TagNode) XXX_DiscardUnknown() {
	xxx_messageInfo_TagNode.DiscardUnknown(m)
}

var xxx_messageInfo_TagNode proto.InternalMessageInfo

func (m *TagNode) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TagNode) GetTagName() string {
	if m != nil {
		return m.TagName
	}
	return ""
}

func (m *TagNode) GetOrderStartTime() uint64 {
	if m != nil {
		return m.OrderStartTime
	}
	return 0
}

func (m *TagNode) GetOrderEndTime() uint64 {
	if m != nil {
		return m.OrderEndTime
	}
	return 0
}

// 设置月报日报相关信息的请求
type ReportInfoReq struct {
	// 请求的操作 1 是增加 2是修改 3是删除
	Ops                  int32            `protobuf:"varint,1,opt,name=ops,proto3" json:"ops,omitempty"`
	DetailParam          *ReportSetDetail `protobuf:"bytes,2,opt,name=detail_param,json=detailParam,proto3" json:"detail_param,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ReportInfoReq) Reset()         { *m = ReportInfoReq{} }
func (m *ReportInfoReq) String() string { return proto.CompactTextString(m) }
func (*ReportInfoReq) ProtoMessage()    {}
func (*ReportInfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_28a6e429b7fd367c, []int{18}
}

func (m *ReportInfoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportInfoReq.Unmarshal(m, b)
}
func (m *ReportInfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportInfoReq.Marshal(b, m, deterministic)
}
func (m *ReportInfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportInfoReq.Merge(m, src)
}
func (m *ReportInfoReq) XXX_Size() int {
	return xxx_messageInfo_ReportInfoReq.Size(m)
}
func (m *ReportInfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportInfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_ReportInfoReq proto.InternalMessageInfo

func (m *ReportInfoReq) GetOps() int32 {
	if m != nil {
		return m.Ops
	}
	return 0
}

func (m *ReportInfoReq) GetDetailParam() *ReportSetDetail {
	if m != nil {
		return m.DetailParam
	}
	return nil
}

type ReportSetDetail struct {
	// 调度员id
	AccountId int32 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// 发送报告的邮箱
	ReportEmail string `protobuf:"bytes,2,opt,name=report_email,json=reportEmail,proto3" json:"report_email,omitempty"`
	// 月报发送的时间
	MonthTime string `protobuf:"bytes,3,opt,name=month_time,json=monthTime,proto3" json:"month_time,omitempty"`
	// 日报发送的时间
	DayTime              string   `protobuf:"bytes,4,opt,name=day_time,json=dayTime,proto3" json:"day_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReportSetDetail) Reset()         { *m = ReportSetDetail{} }
func (m *ReportSetDetail) String() string { return proto.CompactTextString(m) }
func (*ReportSetDetail) ProtoMessage()    {}
func (*ReportSetDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_28a6e429b7fd367c, []int{19}
}

func (m *ReportSetDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportSetDetail.Unmarshal(m, b)
}
func (m *ReportSetDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportSetDetail.Marshal(b, m, deterministic)
}
func (m *ReportSetDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportSetDetail.Merge(m, src)
}
func (m *ReportSetDetail) XXX_Size() int {
	return xxx_messageInfo_ReportSetDetail.Size(m)
}
func (m *ReportSetDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportSetDetail.DiscardUnknown(m)
}

var xxx_messageInfo_ReportSetDetail proto.InternalMessageInfo

func (m *ReportSetDetail) GetAccountId() int32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *ReportSetDetail) GetReportEmail() string {
	if m != nil {
		return m.ReportEmail
	}
	return ""
}

func (m *ReportSetDetail) GetMonthTime() string {
	if m != nil {
		return m.MonthTime
	}
	return ""
}

func (m *ReportSetDetail) GetDayTime() string {
	if m != nil {
		return m.DayTime
	}
	return ""
}

type ReportInfoResp struct {
	Res                  *Result  `protobuf:"bytes,1,opt,name=res,proto3" json:"res,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReportInfoResp) Reset()         { *m = ReportInfoResp{} }
func (m *ReportInfoResp) String() string { return proto.CompactTextString(m) }
func (*ReportInfoResp) ProtoMessage()    {}
func (*ReportInfoResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_28a6e429b7fd367c, []int{20}
}

func (m *ReportInfoResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportInfoResp.Unmarshal(m, b)
}
func (m *ReportInfoResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportInfoResp.Marshal(b, m, deterministic)
}
func (m *ReportInfoResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportInfoResp.Merge(m, src)
}
func (m *ReportInfoResp) XXX_Size() int {
	return xxx_messageInfo_ReportInfoResp.Size(m)
}
func (m *ReportInfoResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportInfoResp.DiscardUnknown(m)
}

var xxx_messageInfo_ReportInfoResp proto.InternalMessageInfo

func (m *ReportInfoResp) GetRes() *Result {
	if m != nil {
		return m.Res
	}
	return nil
}

type ReportSetInfoReq struct {
	AccountId            int32    `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReportSetInfoReq) Reset()         { *m = ReportSetInfoReq{} }
func (m *ReportSetInfoReq) String() string { return proto.CompactTextString(m) }
func (*ReportSetInfoReq) ProtoMessage()    {}
func (*ReportSetInfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_28a6e429b7fd367c, []int{21}
}

func (m *ReportSetInfoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportSetInfoReq.Unmarshal(m, b)
}
func (m *ReportSetInfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportSetInfoReq.Marshal(b, m, deterministic)
}
func (m *ReportSetInfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportSetInfoReq.Merge(m, src)
}
func (m *ReportSetInfoReq) XXX_Size() int {
	return xxx_messageInfo_ReportSetInfoReq.Size(m)
}
func (m *ReportSetInfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportSetInfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_ReportSetInfoReq proto.InternalMessageInfo

func (m *ReportSetInfoReq) GetAccountId() int32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

type ReportSetInfoResp struct {
	// 设置的详情
	Detail               *ReportSetDetail `protobuf:"bytes,1,opt,name=detail,proto3" json:"detail,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ReportSetInfoResp) Reset()         { *m = ReportSetInfoResp{} }
func (m *ReportSetInfoResp) String() string { return proto.CompactTextString(m) }
func (*ReportSetInfoResp) ProtoMessage()    {}
func (*ReportSetInfoResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_28a6e429b7fd367c, []int{22}
}

func (m *ReportSetInfoResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportSetInfoResp.Unmarshal(m, b)
}
func (m *ReportSetInfoResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportSetInfoResp.Marshal(b, m, deterministic)
}
func (m *ReportSetInfoResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportSetInfoResp.Merge(m, src)
}
func (m *ReportSetInfoResp) XXX_Size() int {
	return xxx_messageInfo_ReportSetInfoResp.Size(m)
}
func (m *ReportSetInfoResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportSetInfoResp.DiscardUnknown(m)
}

var xxx_messageInfo_ReportSetInfoResp proto.InternalMessageInfo

func (m *ReportSetInfoResp) GetDetail() *ReportSetDetail {
	if m != nil {
		return m.Detail
	}
	return nil
}

// 设备打卡的请求
type ClockData struct {
	// 设备id
	DeviceId int32 `protobuf:"varint,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	// 标签id
	TagId int32 `protobuf:"varint,2,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
	// 打卡的时间戳
	ClockTime uint64 `protobuf:"varint,3,opt,name=clock_time,json=clockTime,proto3" json:"clock_time,omitempty"`
	// 打卡的时区
	TimeZone             string   `protobuf:"bytes,4,opt,name=time_zone,json=timeZone,proto3" json:"time_zone,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClockData) Reset()         { *m = ClockData{} }
func (m *ClockData) String() string { return proto.CompactTextString(m) }
func (*ClockData) ProtoMessage()    {}
func (*ClockData) Descriptor() ([]byte, []int) {
	return fileDescriptor_28a6e429b7fd367c, []int{23}
}

func (m *ClockData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClockData.Unmarshal(m, b)
}
func (m *ClockData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClockData.Marshal(b, m, deterministic)
}
func (m *ClockData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClockData.Merge(m, src)
}
func (m *ClockData) XXX_Size() int {
	return xxx_messageInfo_ClockData.Size(m)
}
func (m *ClockData) XXX_DiscardUnknown() {
	xxx_messageInfo_ClockData.DiscardUnknown(m)
}

var xxx_messageInfo_ClockData proto.InternalMessageInfo

func (m *ClockData) GetDeviceId() int32 {
	if m != nil {
		return m.DeviceId
	}
	return 0
}

func (m *ClockData) GetTagId() int32 {
	if m != nil {
		return m.TagId
	}
	return 0
}

func (m *ClockData) GetClockTime() uint64 {
	if m != nil {
		return m.ClockTime
	}
	return 0
}

func (m *ClockData) GetTimeZone() string {
	if m != nil {
		return m.TimeZone
	}
	return ""
}

// 设备打卡的响应
type ClockDataResp struct {
	Res                  *Result  `protobuf:"bytes,1,opt,name=res,proto3" json:"res,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClockDataResp) Reset()         { *m = ClockDataResp{} }
func (m *ClockDataResp) String() string { return proto.CompactTextString(m) }
func (*ClockDataResp) ProtoMessage()    {}
func (*ClockDataResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_28a6e429b7fd367c, []int{24}
}

func (m *ClockDataResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClockDataResp.Unmarshal(m, b)
}
func (m *ClockDataResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClockDataResp.Marshal(b, m, deterministic)
}
func (m *ClockDataResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClockDataResp.Merge(m, src)
}
func (m *ClockDataResp) XXX_Size() int {
	return xxx_messageInfo_ClockDataResp.Size(m)
}
func (m *ClockDataResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ClockDataResp.DiscardUnknown(m)
}

var xxx_messageInfo_ClockDataResp proto.InternalMessageInfo

func (m *ClockDataResp) GetRes() *Result {
	if m != nil {
		return m.Res
	}
	return nil
}

// 查询设备打卡情况的参数
type ClockStatusReq struct {
	// 调度员id
	AccountId int32 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// 设备id
	DeviceId int32 `protobuf:"varint,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	// 查询起始时间戳
	StartTimestamp       uint64   `protobuf:"varint,3,opt,name=start_timestamp,json=startTimestamp,proto3" json:"start_timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClockStatusReq) Reset()         { *m = ClockStatusReq{} }
func (m *ClockStatusReq) String() string { return proto.CompactTextString(m) }
func (*ClockStatusReq) ProtoMessage()    {}
func (*ClockStatusReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_28a6e429b7fd367c, []int{25}
}

func (m *ClockStatusReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClockStatusReq.Unmarshal(m, b)
}
func (m *ClockStatusReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClockStatusReq.Marshal(b, m, deterministic)
}
func (m *ClockStatusReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClockStatusReq.Merge(m, src)
}
func (m *ClockStatusReq) XXX_Size() int {
	return xxx_messageInfo_ClockStatusReq.Size(m)
}
func (m *ClockStatusReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ClockStatusReq.DiscardUnknown(m)
}

var xxx_messageInfo_ClockStatusReq proto.InternalMessageInfo

func (m *ClockStatusReq) GetAccountId() int32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *ClockStatusReq) GetDeviceId() int32 {
	if m != nil {
		return m.DeviceId
	}
	return 0
}

func (m *ClockStatusReq) GetStartTimestamp() uint64 {
	if m != nil {
		return m.StartTimestamp
	}
	return 0
}

// 查询设备打卡情况的返回
type ClockStatusResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClockStatusResp) Reset()         { *m = ClockStatusResp{} }
func (m *ClockStatusResp) String() string { return proto.CompactTextString(m) }
func (*ClockStatusResp) ProtoMessage()    {}
func (*ClockStatusResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_28a6e429b7fd367c, []int{26}
}

func (m *ClockStatusResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClockStatusResp.Unmarshal(m, b)
}
func (m *ClockStatusResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClockStatusResp.Marshal(b, m, deterministic)
}
func (m *ClockStatusResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClockStatusResp.Merge(m, src)
}
func (m *ClockStatusResp) XXX_Size() int {
	return xxx_messageInfo_ClockStatusResp.Size(m)
}
func (m *ClockStatusResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ClockStatusResp.DiscardUnknown(m)
}

var xxx_messageInfo_ClockStatusResp proto.InternalMessageInfo

func init() {
	proto.RegisterType((*GetTagsInfoReq)(nil), "talk_cloud.GetTagsInfoReq")
	proto.RegisterType((*GetTagsInfoResp)(nil), "talk_cloud.GetTagsInfoResp")
	proto.RegisterType((*TagsInfoReq)(nil), "talk_cloud.TagsInfoReq")
	proto.RegisterType((*TagsInfoResp)(nil), "talk_cloud.TagsInfoResp")
	proto.RegisterType((*Tag)(nil), "talk_cloud.Tag")
	proto.RegisterType((*GetTagTasksListReq)(nil), "talk_cloud.GetTagTasksListReq")
	proto.RegisterType((*GetTagTasksListResp)(nil), "talk_cloud.GetTagTasksListResp")
	proto.RegisterType((*TagTasksListReq)(nil), "talk_cloud.TagTasksListReq")
	proto.RegisterType((*TagTasksListResp)(nil), "talk_cloud.TagTasksListResp")
	proto.RegisterType((*TagTaskListNode)(nil), "talk_cloud.TagTaskListNode")
	proto.RegisterType((*TagTaskNode)(nil), "talk_cloud.TagTaskNode")
	proto.RegisterType((*DeviceTasksReq)(nil), "talk_cloud.DeviceTasksReq")
	proto.RegisterType((*DeviceTasksResp)(nil), "talk_cloud.DeviceTasksResp")
	proto.RegisterType((*DeviceTaskNode)(nil), "talk_cloud.DeviceTaskNode")
	proto.RegisterType((*TaskDetailReq)(nil), "talk_cloud.TaskDetailReq")
	proto.RegisterType((*TaskDetailResp)(nil), "talk_cloud.TaskDetailResp")
	proto.RegisterType((*TaskDetail)(nil), "talk_cloud.TaskDetail")
	proto.RegisterType((*TagNode)(nil), "talk_cloud.TagNode")
	proto.RegisterType((*ReportInfoReq)(nil), "talk_cloud.reportInfoReq")
	proto.RegisterType((*ReportSetDetail)(nil), "talk_cloud.ReportSetDetail")
	proto.RegisterType((*ReportInfoResp)(nil), "talk_cloud.reportInfoResp")
	proto.RegisterType((*ReportSetInfoReq)(nil), "talk_cloud.ReportSetInfoReq")
	proto.RegisterType((*ReportSetInfoResp)(nil), "talk_cloud.ReportSetInfoResp")
	proto.RegisterType((*ClockData)(nil), "talk_cloud.ClockData")
	proto.RegisterType((*ClockDataResp)(nil), "talk_cloud.ClockDataResp")
	proto.RegisterType((*ClockStatusReq)(nil), "talk_cloud.ClockStatusReq")
	proto.RegisterType((*ClockStatusResp)(nil), "talk_cloud.ClockStatusResp")
}

func init() { proto.RegisterFile("talk_cloud_nfc.proto", fileDescriptor_28a6e429b7fd367c) }

var fileDescriptor_28a6e429b7fd367c = []byte{
	// 1187 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x57, 0xcb, 0x72, 0x1b, 0x45,
	0x14, 0xb5, 0x1e, 0x96, 0x34, 0x57, 0xb2, 0xa4, 0x74, 0xe2, 0x58, 0x96, 0xed, 0xc4, 0x34, 0xa9,
	0xc2, 0x6c, 0x5c, 0xe0, 0x40, 0x60, 0x43, 0xaa, 0x82, 0x1d, 0x1c, 0x51, 0x29, 0xe3, 0x8c, 0xb5,
	0x62, 0x33, 0xd5, 0x68, 0x3a, 0x62, 0xca, 0x92, 0x66, 0x32, 0xdd, 0x4a, 0x95, 0x61, 0x0b, 0x4b,
	0x76, 0x7c, 0x01, 0x1f, 0xc1, 0x97, 0xf0, 0x41, 0x54, 0xdf, 0xee, 0x79, 0xf4, 0xe8, 0x61, 0x07,
	0x76, 0xd6, 0xb9, 0x7d, 0xef, 0x9c, 0x73, 0x5f, 0xdd, 0x86, 0x07, 0x92, 0x4d, 0xae, 0xbd, 0xd1,
	0x24, 0x9c, 0xfb, 0xde, 0xec, 0xed, 0xe8, 0x38, 0x8a, 0x43, 0x19, 0x12, 0xc8, 0xd0, 0xfe, 0xc3,
	0xdc, 0x89, 0x69, 0xe8, 0xf3, 0x89, 0x3e, 0x43, 0x8f, 0xa1, 0x7d, 0xce, 0xe5, 0x90, 0x8d, 0xc5,
	0x60, 0xf6, 0x36, 0x74, 0xf9, 0x3b, 0xb2, 0x0f, 0x0e, 0x1b, 0x8d, 0xc2, 0xf9, 0x4c, 0x0e, 0xfc,
	0x5e, 0xe9, 0xb0, 0x74, 0xb4, 0xe9, 0x66, 0x00, 0x7d, 0x06, 0x1d, 0xeb, 0xbc, 0x88, 0xc8, 0xc7,
	0x50, 0x95, 0x6c, 0x2c, 0x7a, 0xa5, 0xc3, 0xca, 0x51, 0xf3, 0xa4, 0x73, 0x9c, 0x7d, 0xe9, 0x78,
	0xc8, 0xc6, 0x2e, 0x1a, 0xe9, 0x08, 0x9a, 0xf9, 0x8f, 0xdc, 0xc5, 0x87, 0x74, 0xa1, 0x12, 0x46,
	0xa2, 0x57, 0x46, 0x0e, 0xea, 0x4f, 0x72, 0x00, 0x60, 0xa8, 0x78, 0x81, 0xdf, 0xab, 0x14, 0xc9,
	0x7d, 0x01, 0x2d, 0x8b, 0xd9, 0x13, 0xa8, 0xb8, 0x5c, 0xa0, 0x88, 0xe6, 0x09, 0xc9, 0x7f, 0xc4,
	0xe5, 0x62, 0x3e, 0x91, 0xae, 0x32, 0xd3, 0x7f, 0x4a, 0x50, 0x19, 0xb2, 0x31, 0x69, 0x43, 0x39,
	0x48, 0x14, 0x97, 0x03, 0x9f, 0xec, 0x42, 0x43, 0xb2, 0xb1, 0x37, 0x63, 0x53, 0x8e, 0x1c, 0x1c,
	0xb7, 0x2e, 0xd9, 0xf8, 0x82, 0x4d, 0x79, 0x62, 0x62, 0xbe, 0x1f, 0x23, 0x0b, 0x6d, 0x7a, 0xe1,
	0xfb, 0x71, 0x81, 0x62, 0xb5, 0x40, 0x91, 0x7c, 0x0a, 0xdd, 0x51, 0xcc, 0x99, 0xe4, 0x9e, 0x0c,
	0xa6, 0x5c, 0x48, 0x36, 0x8d, 0x7a, 0x9b, 0x18, 0xa1, 0xa3, 0xf1, 0x61, 0x02, 0xab, 0xa3, 0xc1,
	0x34, 0x0a, 0x63, 0x99, 0x3b, 0x5a, 0x3b, 0x2c, 0x1d, 0x55, 0xdd, 0x8e, 0xc6, 0xb3, 0xa3, 0x04,
	0xaa, 0xf3, 0x79, 0xe0, 0xf7, 0xea, 0x18, 0x09, 0xff, 0xa6, 0x27, 0x40, 0x74, 0xa5, 0x86, 0x4c,
	0x5c, 0x8b, 0xd7, 0x81, 0x90, 0xb7, 0x57, 0x77, 0x1b, 0xee, 0x2f, 0xf8, 0x88, 0x88, 0xfe, 0x5e,
	0x82, 0x4e, 0x31, 0xd0, 0x0b, 0x68, 0xab, 0x14, 0x48, 0x26, 0xae, 0xbd, 0x49, 0x20, 0x64, 0x52,
	0xcb, 0xbd, 0x42, 0x2d, 0x95, 0x93, 0xf2, 0xb9, 0x08, 0x7d, 0xee, 0xb6, 0x64, 0x06, 0xfc, 0x87,
	0xfa, 0x7e, 0x0d, 0xdd, 0x22, 0xb7, 0x3b, 0xd6, 0xf8, 0xaf, 0x72, 0xaa, 0x20, 0x21, 0x43, 0x1e,
	0x41, 0x33, 0x55, 0x60, 0x0a, 0x5f, 0x71, 0x1d, 0xc3, 0x70, 0xe0, 0x93, 0x6f, 0x72, 0x0a, 0x67,
	0xa1, 0xcf, 0x15, 0x53, 0xa5, 0x70, 0x67, 0x89, 0x42, 0x4b, 0x9d, 0xfa, 0x71, 0x9b, 0x16, 0x65,
	0x16, 0x7c, 0xe6, 0x7b, 0x7c, 0xca, 0x82, 0x09, 0xf6, 0x89, 0xe3, 0x3a, 0x0a, 0x79, 0xa9, 0x00,
	0xb2, 0x07, 0xf8, 0x03, 0x4b, 0x8f, 0x0d, 0x52, 0x75, 0x1b, 0x0a, 0x50, 0x35, 0x57, 0x46, 0xcd,
	0x4a, 0xb5, 0x66, 0x0d, 0x5d, 0x1b, 0x0a, 0xc0, 0xde, 0x54, 0xc6, 0x60, 0xca, 0xbd, 0x5f, 0xc2,
	0x19, 0x37, 0x0d, 0xd1, 0x50, 0xc0, 0x8f, 0xe1, 0x0c, 0x8d, 0x82, 0xbd, 0xd7, 0xcd, 0xd7, 0x6b,
	0xa0, 0xe2, 0x86, 0x02, 0x54, 0x58, 0xfa, 0x77, 0x19, 0x87, 0x34, 0x91, 0xb0, 0x30, 0x10, 0xb6,
	0xa2, 0x72, 0x51, 0xd1, 0x1e, 0x38, 0x3e, 0x7f, 0x1f, 0x8c, 0x78, 0xa6, 0xb7, 0xa1, 0x81, 0x81,
	0x4f, 0xb6, 0xa1, 0xa6, 0x92, 0x99, 0x8e, 0xc4, 0xa6, 0x64, 0xe3, 0x81, 0x4f, 0x8e, 0xa0, 0x1b,
	0xc6, 0x3e, 0x8f, 0x3d, 0x21, 0x99, 0x69, 0x74, 0xa3, 0xb6, 0x8d, 0xf8, 0x95, 0x82, 0x51, 0xf3,
	0x13, 0xd0, 0x88, 0x97, 0x66, 0x45, 0xcf, 0x42, 0x0b, 0xd1, 0x97, 0x26, 0x33, 0xbb, 0xd0, 0x08,
	0x84, 0x2a, 0xcd, 0xe8, 0x1a, 0xb5, 0x6f, 0xba, 0xf5, 0x40, 0x9c, 0xaa, 0x9f, 0x8a, 0x3d, 0xe2,
	0x99, 0xf6, 0xaa, 0xeb, 0x20, 0x82, 0x9e, 0x8f, 0xa1, 0x99, 0x1b, 0xcc, 0x9e, 0x83, 0x89, 0x83,
	0x6c, 0x26, 0xad, 0x75, 0x00, 0xd6, 0x3a, 0xa0, 0xaf, 0xa1, 0x7d, 0x86, 0x42, 0xb1, 0x35, 0xd5,
	0x74, 0xd8, 0xa9, 0x2a, 0xad, 0x4d, 0x55, 0xd9, 0x4e, 0x15, 0xf5, 0xa1, 0x63, 0x45, 0x13, 0x11,
	0x79, 0x03, 0x3b, 0x22, 0x98, 0x8d, 0x27, 0xdc, 0x33, 0x6e, 0xe9, 0xd8, 0x99, 0xa9, 0xeb, 0xe7,
	0x7b, 0x32, 0xf3, 0xc6, 0xb6, 0x7c, 0xa0, 0x5d, 0x33, 0x54, 0x4d, 0x80, 0x9a, 0xe9, 0xb6, 0x7d,
	0xf0, 0xd6, 0x81, 0xb0, 0xda, 0xae, 0xbc, 0xd8, 0x76, 0x59, 0x67, 0x55, 0xec, 0xce, 0x4a, 0x72,
	0x87, 0x84, 0xab, 0x87, 0x15, 0x93, 0x3b, 0xe4, 0x71, 0x0e, 0x5b, 0x2a, 0xfc, 0x19, 0x97, 0x2c,
	0x98, 0xdc, 0x21, 0x75, 0x3b, 0x50, 0x4f, 0x08, 0xea, 0xc4, 0xd5, 0x24, 0xb2, 0xa3, 0x03, 0x68,
	0xe7, 0x03, 0x89, 0x88, 0x7c, 0xa5, 0xf4, 0x88, 0x6b, 0xcf, 0x47, 0xc8, 0xac, 0x88, 0x87, 0xf6,
	0xf4, 0xa6, 0x0e, 0x20, 0xd3, 0xbf, 0xe9, 0x73, 0x80, 0xcc, 0x42, 0x3e, 0x53, 0xb2, 0xc7, 0x66,
	0x05, 0xe8, 0x74, 0xdf, 0x2f, 0xac, 0x00, 0xcc, 0xb3, 0x92, 0x88, 0xa3, 0x4f, 0x7f, 0x2b, 0x41,
	0xdd, 0xa0, 0x1f, 0x72, 0xab, 0x2c, 0x1b, 0x86, 0xca, 0x1d, 0x87, 0xa1, 0xba, 0x38, 0x0c, 0x94,
	0xc1, 0x56, 0xcc, 0xd5, 0x45, 0x91, 0xdc, 0xba, 0x66, 0xe1, 0x96, 0xb2, 0x85, 0xfb, 0x1c, 0x5a,
	0x3a, 0x3b, 0x5e, 0xc4, 0x62, 0x36, 0x45, 0x46, 0x85, 0x1d, 0xee, 0x62, 0x88, 0x2b, 0x2e, 0x4d,
	0xa2, 0x9a, 0xda, 0xe1, 0x52, 0x9d, 0xa7, 0x7f, 0x94, 0xa0, 0x53, 0x38, 0x70, 0x5b, 0x01, 0x3f,
	0x82, 0x96, 0x66, 0x65, 0x56, 0x9f, 0x4e, 0x42, 0x53, 0x63, 0x7a, 0xf9, 0x1d, 0x00, 0x4c, 0xc3,
	0x99, 0xfc, 0x39, 0x4b, 0x81, 0xe3, 0x3a, 0x88, 0x24, 0xdd, 0xe4, 0xb3, 0x9b, 0x4c, 0xb7, 0xe3,
	0xd6, 0x7d, 0x76, 0x83, 0x92, 0x9f, 0x41, 0x3b, 0x2f, 0x59, 0xdf, 0x0f, 0xf1, 0xfa, 0xfb, 0x21,
	0xe6, 0x82, 0x7e, 0x0e, 0xdd, 0x54, 0x46, 0x92, 0xad, 0xf5, 0x3a, 0xe8, 0x2b, 0xb8, 0x57, 0x70,
	0x11, 0x11, 0x79, 0x0a, 0x35, 0xab, 0xdb, 0xd6, 0x66, 0xd2, 0x1c, 0xa5, 0xbf, 0x82, 0x83, 0x2b,
	0xea, 0x8c, 0x49, 0x66, 0xaf, 0x86, 0xd2, 0xca, 0x2d, 0x5a, 0xce, 0x6f, 0x51, 0x7b, 0xb5, 0x55,
	0x8a, 0xab, 0xcd, 0xba, 0x11, 0xaa, 0xf6, 0x8d, 0x40, 0xbf, 0x84, 0xad, 0xf4, 0xe3, 0x1f, 0x90,
	0xb0, 0x39, 0xb4, 0xd1, 0xed, 0x4a, 0x32, 0x39, 0xff, 0xbf, 0x2b, 0x8f, 0x7c, 0x02, 0x9d, 0xac,
	0xe7, 0xf5, 0x4b, 0xc7, 0x34, 0xbe, 0x48, 0x7a, 0x1e, 0x51, 0x7a, 0x0f, 0x3a, 0xd6, 0x67, 0x45,
	0x74, 0xf2, 0x67, 0x0d, 0xe0, 0xe2, 0xbb, 0xd3, 0x2b, 0x1e, 0xab, 0x60, 0xe4, 0x14, 0x5a, 0x97,
	0xa1, 0x48, 0x5f, 0xa8, 0xa4, 0x78, 0x5b, 0x27, 0x4f, 0xd0, 0x7e, 0x6f, 0xb9, 0x41, 0x44, 0x74,
	0x83, 0xbc, 0x82, 0x66, 0xee, 0x95, 0x4b, 0xac, 0xed, 0x6a, 0x3f, 0x97, 0xfb, 0x7b, 0x2b, 0x6d,
	0x18, 0xe9, 0x07, 0xe8, 0x1a, 0x3a, 0xe9, 0xb3, 0x85, 0x2c, 0x7b, 0x22, 0x25, 0xef, 0xaa, 0xfe,
	0xfe, 0x6a, 0x23, 0x06, 0x1c, 0x26, 0x0f, 0xf0, 0x2c, 0xde, 0xa3, 0x45, 0x0a, 0x56, 0xc8, 0xc7,
	0x6b, 0xed, 0x86, 0x26, 0x79, 0x33, 0xe7, 0xf1, 0x0d, 0xe2, 0xdf, 0xde, 0xe8, 0x8b, 0x81, 0xac,
	0xb8, 0x55, 0xc4, 0x82, 0xee, 0xc2, 0x7d, 0x45, 0x37, 0xc8, 0xf7, 0xd0, 0x49, 0x03, 0x9a, 0xbd,
	0xb0, 0xbb, 0x62, 0xf3, 0xf2, 0x77, 0xfd, 0xfe, 0x2a, 0x93, 0xa9, 0xc6, 0xd6, 0x15, 0x97, 0x6e,
	0x3a, 0xd7, 0x76, 0x24, 0x6b, 0xc5, 0xd9, 0x91, 0xec, 0x55, 0x40, 0x37, 0xc8, 0xa5, 0x61, 0x95,
	0x8b, 0xb5, 0xbf, 0x74, 0x42, 0x93, 0x70, 0x07, 0x6b, 0xac, 0x18, 0xf1, 0x1c, 0xee, 0x69, 0xf1,
	0xd8, 0x96, 0xfa, 0x04, 0xd9, 0xce, 0x7b, 0xa5, 0xd3, 0xd5, 0xdf, 0x5d, 0x0a, 0x9b, 0x40, 0x17,
	0x56, 0x20, 0xdd, 0xdf, 0x76, 0x01, 0xec, 0x79, 0xb3, 0x0b, 0x50, 0x18, 0x0a, 0xba, 0xf1, 0x53,
	0x0d, 0xff, 0xbf, 0x7b, 0xfa, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x30, 0xd7, 0x2e, 0x3e, 0x1b,
	0x0e, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NFCServiceClient is the client API for NFCService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NFCServiceClient interface {
	// 保存tag信息, 增加、删除tag
	PostTagsInfo(ctx context.Context, in *TagsInfoReq, opts ...grpc.CallOption) (*TagsInfoResp, error)
	// 查询tag信息
	GetTagsInfo(ctx context.Context, in *GetTagsInfoReq, opts ...grpc.CallOption) (*GetTagsInfoResp, error)
	// 保存tag task信息, 增加、删除tag task
	PostTagTasksList(ctx context.Context, in *TagTasksListReq, opts ...grpc.CallOption) (*TagTasksListResp, error)
	// 查询所有的tag task信息
	GetTagTasksList(ctx context.Context, in *GetTagTasksListReq, opts ...grpc.CallOption) (*GetTagTasksListResp, error)
	// 单个设备查询应该执行的任务信息
	QueryTasksByDevice(ctx context.Context, in *DeviceTasksReq, opts ...grpc.CallOption) (*DeviceTasksResp, error)
	// 任务详细信息查询
	QueryTaskDetail(ctx context.Context, in *TaskDetailReq, opts ...grpc.CallOption) (*TaskDetailResp, error)
	// 调度员设置日报月报邮箱和发送时间
	SetReportInfo(ctx context.Context, in *ReportInfoReq, opts ...grpc.CallOption) (*ReportInfoResp, error)
	// 查询调度员设置邮箱信息
	QueryReportInfo(ctx context.Context, in *ReportSetInfoReq, opts ...grpc.CallOption) (*ReportSetInfoResp, error)
	// 设备打卡
	DeviceClockReport(ctx context.Context, in *ClockData, opts ...grpc.CallOption) (*ClockDataResp, error)
	// 调度员查询设备打卡情况
	DeviceClockStatus(ctx context.Context, in *ClockStatusReq, opts ...grpc.CallOption) (*ClockStatusResp, error)
}

type nFCServiceClient struct {
	cc *grpc.ClientConn
}

func NewNFCServiceClient(cc *grpc.ClientConn) NFCServiceClient {
	return &nFCServiceClient{cc}
}

func (c *nFCServiceClient) PostTagsInfo(ctx context.Context, in *TagsInfoReq, opts ...grpc.CallOption) (*TagsInfoResp, error) {
	out := new(TagsInfoResp)
	err := c.cc.Invoke(ctx, "/talk_cloud.NFCService/PostTagsInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nFCServiceClient) GetTagsInfo(ctx context.Context, in *GetTagsInfoReq, opts ...grpc.CallOption) (*GetTagsInfoResp, error) {
	out := new(GetTagsInfoResp)
	err := c.cc.Invoke(ctx, "/talk_cloud.NFCService/GetTagsInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nFCServiceClient) PostTagTasksList(ctx context.Context, in *TagTasksListReq, opts ...grpc.CallOption) (*TagTasksListResp, error) {
	out := new(TagTasksListResp)
	err := c.cc.Invoke(ctx, "/talk_cloud.NFCService/PostTagTasksList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nFCServiceClient) GetTagTasksList(ctx context.Context, in *GetTagTasksListReq, opts ...grpc.CallOption) (*GetTagTasksListResp, error) {
	out := new(GetTagTasksListResp)
	err := c.cc.Invoke(ctx, "/talk_cloud.NFCService/GetTagTasksList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nFCServiceClient) QueryTasksByDevice(ctx context.Context, in *DeviceTasksReq, opts ...grpc.CallOption) (*DeviceTasksResp, error) {
	out := new(DeviceTasksResp)
	err := c.cc.Invoke(ctx, "/talk_cloud.NFCService/QueryTasksByDevice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nFCServiceClient) QueryTaskDetail(ctx context.Context, in *TaskDetailReq, opts ...grpc.CallOption) (*TaskDetailResp, error) {
	out := new(TaskDetailResp)
	err := c.cc.Invoke(ctx, "/talk_cloud.NFCService/QueryTaskDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nFCServiceClient) SetReportInfo(ctx context.Context, in *ReportInfoReq, opts ...grpc.CallOption) (*ReportInfoResp, error) {
	out := new(ReportInfoResp)
	err := c.cc.Invoke(ctx, "/talk_cloud.NFCService/SetReportInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nFCServiceClient) QueryReportInfo(ctx context.Context, in *ReportSetInfoReq, opts ...grpc.CallOption) (*ReportSetInfoResp, error) {
	out := new(ReportSetInfoResp)
	err := c.cc.Invoke(ctx, "/talk_cloud.NFCService/QueryReportInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nFCServiceClient) DeviceClockReport(ctx context.Context, in *ClockData, opts ...grpc.CallOption) (*ClockDataResp, error) {
	out := new(ClockDataResp)
	err := c.cc.Invoke(ctx, "/talk_cloud.NFCService/DeviceClockReport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nFCServiceClient) DeviceClockStatus(ctx context.Context, in *ClockStatusReq, opts ...grpc.CallOption) (*ClockStatusResp, error) {
	out := new(ClockStatusResp)
	err := c.cc.Invoke(ctx, "/talk_cloud.NFCService/DeviceClockStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NFCServiceServer is the server API for NFCService service.
type NFCServiceServer interface {
	// 保存tag信息, 增加、删除tag
	PostTagsInfo(context.Context, *TagsInfoReq) (*TagsInfoResp, error)
	// 查询tag信息
	GetTagsInfo(context.Context, *GetTagsInfoReq) (*GetTagsInfoResp, error)
	// 保存tag task信息, 增加、删除tag task
	PostTagTasksList(context.Context, *TagTasksListReq) (*TagTasksListResp, error)
	// 查询所有的tag task信息
	GetTagTasksList(context.Context, *GetTagTasksListReq) (*GetTagTasksListResp, error)
	// 单个设备查询应该执行的任务信息
	QueryTasksByDevice(context.Context, *DeviceTasksReq) (*DeviceTasksResp, error)
	// 任务详细信息查询
	QueryTaskDetail(context.Context, *TaskDetailReq) (*TaskDetailResp, error)
	// 调度员设置日报月报邮箱和发送时间
	SetReportInfo(context.Context, *ReportInfoReq) (*ReportInfoResp, error)
	// 查询调度员设置邮箱信息
	QueryReportInfo(context.Context, *ReportSetInfoReq) (*ReportSetInfoResp, error)
	// 设备打卡
	DeviceClockReport(context.Context, *ClockData) (*ClockDataResp, error)
	// 调度员查询设备打卡情况
	DeviceClockStatus(context.Context, *ClockStatusReq) (*ClockStatusResp, error)
}

// UnimplementedNFCServiceServer can be embedded to have forward compatible implementations.
type UnimplementedNFCServiceServer struct {
}

func (*UnimplementedNFCServiceServer) PostTagsInfo(ctx context.Context, req *TagsInfoReq) (*TagsInfoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostTagsInfo not implemented")
}
func (*UnimplementedNFCServiceServer) GetTagsInfo(ctx context.Context, req *GetTagsInfoReq) (*GetTagsInfoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTagsInfo not implemented")
}
func (*UnimplementedNFCServiceServer) PostTagTasksList(ctx context.Context, req *TagTasksListReq) (*TagTasksListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostTagTasksList not implemented")
}
func (*UnimplementedNFCServiceServer) GetTagTasksList(ctx context.Context, req *GetTagTasksListReq) (*GetTagTasksListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTagTasksList not implemented")
}
func (*UnimplementedNFCServiceServer) QueryTasksByDevice(ctx context.Context, req *DeviceTasksReq) (*DeviceTasksResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryTasksByDevice not implemented")
}
func (*UnimplementedNFCServiceServer) QueryTaskDetail(ctx context.Context, req *TaskDetailReq) (*TaskDetailResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryTaskDetail not implemented")
}
func (*UnimplementedNFCServiceServer) SetReportInfo(ctx context.Context, req *ReportInfoReq) (*ReportInfoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetReportInfo not implemented")
}
func (*UnimplementedNFCServiceServer) QueryReportInfo(ctx context.Context, req *ReportSetInfoReq) (*ReportSetInfoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryReportInfo not implemented")
}
func (*UnimplementedNFCServiceServer) DeviceClockReport(ctx context.Context, req *ClockData) (*ClockDataResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeviceClockReport not implemented")
}
func (*UnimplementedNFCServiceServer) DeviceClockStatus(ctx context.Context, req *ClockStatusReq) (*ClockStatusResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeviceClockStatus not implemented")
}

func RegisterNFCServiceServer(s *grpc.Server, srv NFCServiceServer) {
	s.RegisterService(&_NFCService_serviceDesc, srv)
}

func _NFCService_PostTagsInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TagsInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NFCServiceServer).PostTagsInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/talk_cloud.NFCService/PostTagsInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NFCServiceServer).PostTagsInfo(ctx, req.(*TagsInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _NFCService_GetTagsInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTagsInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NFCServiceServer).GetTagsInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/talk_cloud.NFCService/GetTagsInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NFCServiceServer).GetTagsInfo(ctx, req.(*GetTagsInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _NFCService_PostTagTasksList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TagTasksListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NFCServiceServer).PostTagTasksList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/talk_cloud.NFCService/PostTagTasksList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NFCServiceServer).PostTagTasksList(ctx, req.(*TagTasksListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _NFCService_GetTagTasksList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTagTasksListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NFCServiceServer).GetTagTasksList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/talk_cloud.NFCService/GetTagTasksList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NFCServiceServer).GetTagTasksList(ctx, req.(*GetTagTasksListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _NFCService_QueryTasksByDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeviceTasksReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NFCServiceServer).QueryTasksByDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/talk_cloud.NFCService/QueryTasksByDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NFCServiceServer).QueryTasksByDevice(ctx, req.(*DeviceTasksReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _NFCService_QueryTaskDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TaskDetailReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NFCServiceServer).QueryTaskDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/talk_cloud.NFCService/QueryTaskDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NFCServiceServer).QueryTaskDetail(ctx, req.(*TaskDetailReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _NFCService_SetReportInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReportInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NFCServiceServer).SetReportInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/talk_cloud.NFCService/SetReportInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NFCServiceServer).SetReportInfo(ctx, req.(*ReportInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _NFCService_QueryReportInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReportSetInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NFCServiceServer).QueryReportInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/talk_cloud.NFCService/QueryReportInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NFCServiceServer).QueryReportInfo(ctx, req.(*ReportSetInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _NFCService_DeviceClockReport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClockData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NFCServiceServer).DeviceClockReport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/talk_cloud.NFCService/DeviceClockReport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NFCServiceServer).DeviceClockReport(ctx, req.(*ClockData))
	}
	return interceptor(ctx, in, info, handler)
}

func _NFCService_DeviceClockStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClockStatusReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NFCServiceServer).DeviceClockStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/talk_cloud.NFCService/DeviceClockStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NFCServiceServer).DeviceClockStatus(ctx, req.(*ClockStatusReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _NFCService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "talk_cloud.NFCService",
	HandlerType: (*NFCServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PostTagsInfo",
			Handler:    _NFCService_PostTagsInfo_Handler,
		},
		{
			MethodName: "GetTagsInfo",
			Handler:    _NFCService_GetTagsInfo_Handler,
		},
		{
			MethodName: "PostTagTasksList",
			Handler:    _NFCService_PostTagTasksList_Handler,
		},
		{
			MethodName: "GetTagTasksList",
			Handler:    _NFCService_GetTagTasksList_Handler,
		},
		{
			MethodName: "QueryTasksByDevice",
			Handler:    _NFCService_QueryTasksByDevice_Handler,
		},
		{
			MethodName: "QueryTaskDetail",
			Handler:    _NFCService_QueryTaskDetail_Handler,
		},
		{
			MethodName: "SetReportInfo",
			Handler:    _NFCService_SetReportInfo_Handler,
		},
		{
			MethodName: "QueryReportInfo",
			Handler:    _NFCService_QueryReportInfo_Handler,
		},
		{
			MethodName: "DeviceClockReport",
			Handler:    _NFCService_DeviceClockReport_Handler,
		},
		{
			MethodName: "DeviceClockStatus",
			Handler:    _NFCService_DeviceClockStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "talk_cloud_nfc.proto",
}
