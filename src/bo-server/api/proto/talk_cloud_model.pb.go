// Code generated by protoc-gen-go. DO NOT EDIT.
// source: talk_cloud_model.proto

package talk_cloud

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 群组数据模型
type Group struct {
	// 群组Id
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 群组名称
	GroupName string `protobuf:"bytes,2,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	// 群组所属调度员的Id
	AccountId int32 `protobuf:"varint,3,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// 群组状态
	Status               int32    `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Group) Reset()         { *m = Group{} }
func (m *Group) String() string { return proto.CompactTextString(m) }
func (*Group) ProtoMessage()    {}
func (*Group) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e22deedf62cfd44, []int{0}
}

func (m *Group) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Group.Unmarshal(m, b)
}
func (m *Group) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Group.Marshal(b, m, deterministic)
}
func (m *Group) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Group.Merge(m, src)
}
func (m *Group) XXX_Size() int {
	return xxx_messageInfo_Group.Size(m)
}
func (m *Group) XXX_DiscardUnknown() {
	xxx_messageInfo_Group.DiscardUnknown(m)
}

var xxx_messageInfo_Group proto.InternalMessageInfo

func (m *Group) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Group) GetGroupName() string {
	if m != nil {
		return m.GroupName
	}
	return ""
}

func (m *Group) GetAccountId() int32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *Group) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

// 成员/app用户/device
type Member struct {
	// 成员Id
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 设备Imei号
	IMei string `protobuf:"bytes,2,opt,name=iMei,proto3" json:"iMei,omitempty"`
	// 设备账号
	UserName string `protobuf:"bytes,3,opt,name=userName,proto3" json:"userName,omitempty"`
	// 设备昵称
	NickName string `protobuf:"bytes,4,opt,name=nickName,proto3" json:"nickName,omitempty"`
	// 设备密码
	Pwd string `protobuf:"bytes,5,opt,name=pwd,proto3" json:"pwd,omitempty"`
	// 用户类型
	UserType int32 `protobuf:"varint,6,opt,name=userType,proto3" json:"userType,omitempty"`
	// 所属调度员的Id
	AccountId int32 `protobuf:"varint,7,opt,name=accountId,proto3" json:"accountId,omitempty"`
	// 上级用户的Id
	ParentId string `protobuf:"bytes,8,opt,name=parentId,proto3" json:"parentId,omitempty"`
	// 0  离线 , 1 在线
	Online int32 `protobuf:"varint,9,opt,name=online,proto3" json:"online,omitempty"`
	// 用户锁定群组Id
	LockGroupId int32 `protobuf:"varint,10,opt,name=lockGroupId,proto3" json:"lockGroupId,omitempty"`
	// 用户在群中的角色
	GRoleType int32 `protobuf:"varint,11,opt,name=GRoleType,proto3" json:"GRoleType,omitempty"`
	// 是否开启日志 0是关闭，1是开启
	StartLog             int32    `protobuf:"varint,12,opt,name=StartLog,proto3" json:"StartLog,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Member) Reset()         { *m = Member{} }
func (m *Member) String() string { return proto.CompactTextString(m) }
func (*Member) ProtoMessage()    {}
func (*Member) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e22deedf62cfd44, []int{1}
}

func (m *Member) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Member.Unmarshal(m, b)
}
func (m *Member) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Member.Marshal(b, m, deterministic)
}
func (m *Member) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Member.Merge(m, src)
}
func (m *Member) XXX_Size() int {
	return xxx_messageInfo_Member.Size(m)
}
func (m *Member) XXX_DiscardUnknown() {
	xxx_messageInfo_Member.DiscardUnknown(m)
}

var xxx_messageInfo_Member proto.InternalMessageInfo

func (m *Member) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Member) GetIMei() string {
	if m != nil {
		return m.IMei
	}
	return ""
}

func (m *Member) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *Member) GetNickName() string {
	if m != nil {
		return m.NickName
	}
	return ""
}

func (m *Member) GetPwd() string {
	if m != nil {
		return m.Pwd
	}
	return ""
}

func (m *Member) GetUserType() int32 {
	if m != nil {
		return m.UserType
	}
	return 0
}

func (m *Member) GetAccountId() int32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *Member) GetParentId() string {
	if m != nil {
		return m.ParentId
	}
	return ""
}

func (m *Member) GetOnline() int32 {
	if m != nil {
		return m.Online
	}
	return 0
}

func (m *Member) GetLockGroupId() int32 {
	if m != nil {
		return m.LockGroupId
	}
	return 0
}

func (m *Member) GetGRoleType() int32 {
	if m != nil {
		return m.GRoleType
	}
	return 0
}

func (m *Member) GetStartLog() int32 {
	if m != nil {
		return m.StartLog
	}
	return 0
}

// 结果信息
type Result struct {
	// 错误码, 200表示成功，其他表示失败
	Code int64 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 错误消息
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Result) Reset()         { *m = Result{} }
func (m *Result) String() string { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()    {}
func (*Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e22deedf62cfd44, []int{2}
}

func (m *Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Result.Unmarshal(m, b)
}
func (m *Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Result.Marshal(b, m, deterministic)
}
func (m *Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Result.Merge(m, src)
}
func (m *Result) XXX_Size() int {
	return xxx_messageInfo_Result.Size(m)
}
func (m *Result) XXX_DiscardUnknown() {
	xxx_messageInfo_Result.DiscardUnknown(m)
}

var xxx_messageInfo_Result proto.InternalMessageInfo

func (m *Result) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Result) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

// wifi数据模型
type Wifi struct {
	// wifi的强度
	Level int32 `protobuf:"varint,1,opt,name=level,proto3" json:"level,omitempty"`
	// wifi的BSSID
	BssId string `protobuf:"bytes,2,opt,name=bssId,proto3" json:"bssId,omitempty"`
	// 经度
	Longitude float64 `protobuf:"fixed64,3,opt,name=longitude,proto3" json:"longitude,omitempty"`
	// 纬度
	Latitude float64 `protobuf:"fixed64,4,opt,name=latitude,proto3" json:"latitude,omitempty"`
	// wifi在表中记录的自增Id app应该用不到
	Id int32 `protobuf:"varint,5,opt,name=id,proto3" json:"id,omitempty"`
	// wifi描述信息
	Des                  string   `protobuf:"bytes,6,opt,name=des,proto3" json:"des,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Wifi) Reset()         { *m = Wifi{} }
func (m *Wifi) String() string { return proto.CompactTextString(m) }
func (*Wifi) ProtoMessage()    {}
func (*Wifi) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e22deedf62cfd44, []int{3}
}

func (m *Wifi) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Wifi.Unmarshal(m, b)
}
func (m *Wifi) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Wifi.Marshal(b, m, deterministic)
}
func (m *Wifi) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Wifi.Merge(m, src)
}
func (m *Wifi) XXX_Size() int {
	return xxx_messageInfo_Wifi.Size(m)
}
func (m *Wifi) XXX_DiscardUnknown() {
	xxx_messageInfo_Wifi.DiscardUnknown(m)
}

var xxx_messageInfo_Wifi proto.InternalMessageInfo

func (m *Wifi) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *Wifi) GetBssId() string {
	if m != nil {
		return m.BssId
	}
	return ""
}

func (m *Wifi) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *Wifi) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *Wifi) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Wifi) GetDes() string {
	if m != nil {
		return m.Des
	}
	return ""
}

type GroupInfo struct {
	Gid                  int32         `protobuf:"varint,1,opt,name=gid,proto3" json:"gid,omitempty"`
	GroupName            string        `protobuf:"bytes,2,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	GroupManager         []int32       `protobuf:"varint,3,rep,packed,name=group_manager,json=groupManager,proto3" json:"group_manager,omitempty"`
	GroupOwner           int32         `protobuf:"varint,6,opt,name=group_owner,json=groupOwner,proto3" json:"group_owner,omitempty"`
	UserList             []*DeviceInfo `protobuf:"bytes,4,rep,name=user_list,json=userList,proto3" json:"user_list,omitempty"`
	IsExist              bool          `protobuf:"varint,5,opt,name=isExist,proto3" json:"isExist,omitempty"`
	Status               int32         `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GroupInfo) Reset()         { *m = GroupInfo{} }
func (m *GroupInfo) String() string { return proto.CompactTextString(m) }
func (*GroupInfo) ProtoMessage()    {}
func (*GroupInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e22deedf62cfd44, []int{4}
}

func (m *GroupInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupInfo.Unmarshal(m, b)
}
func (m *GroupInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupInfo.Marshal(b, m, deterministic)
}
func (m *GroupInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupInfo.Merge(m, src)
}
func (m *GroupInfo) XXX_Size() int {
	return xxx_messageInfo_GroupInfo.Size(m)
}
func (m *GroupInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupInfo.DiscardUnknown(m)
}

var xxx_messageInfo_GroupInfo proto.InternalMessageInfo

func (m *GroupInfo) GetGid() int32 {
	if m != nil {
		return m.Gid
	}
	return 0
}

func (m *GroupInfo) GetGroupName() string {
	if m != nil {
		return m.GroupName
	}
	return ""
}

func (m *GroupInfo) GetGroupManager() []int32 {
	if m != nil {
		return m.GroupManager
	}
	return nil
}

func (m *GroupInfo) GetGroupOwner() int32 {
	if m != nil {
		return m.GroupOwner
	}
	return 0
}

func (m *GroupInfo) GetUserList() []*DeviceInfo {
	if m != nil {
		return m.UserList
	}
	return nil
}

func (m *GroupInfo) GetIsExist() bool {
	if m != nil {
		return m.IsExist
	}
	return false
}

func (m *GroupInfo) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

// 设备信息的model，用到的接口有：导入设备、更新设备和web定时获取设备信息
type DeviceInfo struct {
	// 设备Id
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 设备Imei号
	Imei string `protobuf:"bytes,2,opt,name=imei,proto3" json:"imei,omitempty"`
	// 设备账号
	UserName string `protobuf:"bytes,3,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	// 设备密码
	Password string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	// 设备所属调度员/经销商的Id
	AccountId int32 `protobuf:"varint,5,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// 创建时间
	CreateTime string `protobuf:"bytes,6,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// 最后一次登录的时间
	LLTime string `protobuf:"bytes,7,opt,name=LL_time,json=LLTime,proto3" json:"LL_time,omitempty"`
	// 改变的时间
	ChangeTime string `protobuf:"bytes,8,opt,name=change_time,json=changeTime,proto3" json:"change_time,omitempty"`
	// 航向
	Course float32 `protobuf:"fixed32,9,opt,name=course,proto3" json:"course,omitempty"`
	// 定位时间
	LocalTime uint64 `protobuf:"varint,10,opt,name=local_time,json=localTime,proto3" json:"local_time,omitempty"`
	// 经度
	Longitude float64 `protobuf:"fixed64,11,opt,name=longitude,proto3" json:"longitude,omitempty"`
	// 设备型号 eg：JW10、T28
	DeviceType string `protobuf:"bytes,12,opt,name=device_type,json=deviceType,proto3" json:"device_type,omitempty"`
	// 纬度
	Latitude float64 `protobuf:"fixed64,13,opt,name=latitude,proto3" json:"latitude,omitempty"`
	// 速度
	Speed float32 `protobuf:"fixed32,14,opt,name=speed,proto3" json:"speed,omitempty"`
	// 设备激活时间
	ActiveTime string `protobuf:"bytes,15,opt,name=active_time,json=activeTime,proto3" json:"active_time,omitempty"`
	// 设备销售时间
	SaleTime string `protobuf:"bytes,16,opt,name=sale_time,json=saleTime,proto3" json:"sale_time,omitempty"`
	// 设备昵称
	NickName string `protobuf:"bytes,17,opt,name=nick_name,json=nickName,proto3" json:"nick_name,omitempty"`
	// 设备电量
	Battery int32 `protobuf:"varint,18,opt,name=battery,proto3" json:"battery,omitempty"`
	// Wifi描述信息，eg：wifi是哪栋楼第几层
	WifiDescription      string   `protobuf:"bytes,19,opt,name=wifi_description,json=wifiDescription,proto3" json:"wifi_description,omitempty"`
	LockGroupId          int32    `protobuf:"varint,20,opt,name=lock_group_id,json=lockGroupId,proto3" json:"lock_group_id,omitempty"`
	UserType             int32    `protobuf:"varint,21,opt,name=user_type,json=userType,proto3" json:"user_type,omitempty"`
	Online               int32    `protobuf:"varint,22,opt,name=online,proto3" json:"online,omitempty"`
	GrpRole              int32    `protobuf:"varint,23,opt,name=grp_role,json=grpRole,proto3" json:"grp_role,omitempty"`
	IsFriend             bool     `protobuf:"varint,24,opt,name=isFriend,proto3" json:"isFriend,omitempty"`
	Charge               int32    `protobuf:"varint,25,opt,name=charge,proto3" json:"charge,omitempty"`
	StartLog             string   `protobuf:"bytes,26,opt,name=start_log,json=startLog,proto3" json:"start_log,omitempty"`
	UserId               int32    `protobuf:"varint,27,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserStatus           int32    `protobuf:"varint,28,opt,name=user_status,json=userStatus,proto3" json:"user_status,omitempty"`
	InLinkQuality        int32    `protobuf:"varint,29,opt,name=in_link_quality,json=inLinkQuality,proto3" json:"in_link_quality,omitempty"`
	InMediaLinkQuality   int32    `protobuf:"varint,30,opt,name=in_media_link_quality,json=inMediaLinkQuality,proto3" json:"in_media_link_quality,omitempty"`
	OutLinkQuality       int32    `protobuf:"varint,31,opt,name=out_link_quality,json=outLinkQuality,proto3" json:"out_link_quality,omitempty"`
	OutMediaLinkQuality  int32    `protobuf:"varint,32,opt,name=out_media_link_quality,json=outMediaLinkQuality,proto3" json:"out_media_link_quality,omitempty"`
	Rtt                  int32    `protobuf:"varint,33,opt,name=rtt,proto3" json:"rtt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceInfo) Reset()         { *m = DeviceInfo{} }
func (m *DeviceInfo) String() string { return proto.CompactTextString(m) }
func (*DeviceInfo) ProtoMessage()    {}
func (*DeviceInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e22deedf62cfd44, []int{5}
}

func (m *DeviceInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceInfo.Unmarshal(m, b)
}
func (m *DeviceInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceInfo.Marshal(b, m, deterministic)
}
func (m *DeviceInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceInfo.Merge(m, src)
}
func (m *DeviceInfo) XXX_Size() int {
	return xxx_messageInfo_DeviceInfo.Size(m)
}
func (m *DeviceInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceInfo proto.InternalMessageInfo

func (m *DeviceInfo) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *DeviceInfo) GetImei() string {
	if m != nil {
		return m.Imei
	}
	return ""
}

func (m *DeviceInfo) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *DeviceInfo) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *DeviceInfo) GetAccountId() int32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *DeviceInfo) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

func (m *DeviceInfo) GetLLTime() string {
	if m != nil {
		return m.LLTime
	}
	return ""
}

func (m *DeviceInfo) GetChangeTime() string {
	if m != nil {
		return m.ChangeTime
	}
	return ""
}

func (m *DeviceInfo) GetCourse() float32 {
	if m != nil {
		return m.Course
	}
	return 0
}

func (m *DeviceInfo) GetLocalTime() uint64 {
	if m != nil {
		return m.LocalTime
	}
	return 0
}

func (m *DeviceInfo) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *DeviceInfo) GetDeviceType() string {
	if m != nil {
		return m.DeviceType
	}
	return ""
}

func (m *DeviceInfo) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *DeviceInfo) GetSpeed() float32 {
	if m != nil {
		return m.Speed
	}
	return 0
}

func (m *DeviceInfo) GetActiveTime() string {
	if m != nil {
		return m.ActiveTime
	}
	return ""
}

func (m *DeviceInfo) GetSaleTime() string {
	if m != nil {
		return m.SaleTime
	}
	return ""
}

func (m *DeviceInfo) GetNickName() string {
	if m != nil {
		return m.NickName
	}
	return ""
}

func (m *DeviceInfo) GetBattery() int32 {
	if m != nil {
		return m.Battery
	}
	return 0
}

func (m *DeviceInfo) GetWifiDescription() string {
	if m != nil {
		return m.WifiDescription
	}
	return ""
}

func (m *DeviceInfo) GetLockGroupId() int32 {
	if m != nil {
		return m.LockGroupId
	}
	return 0
}

func (m *DeviceInfo) GetUserType() int32 {
	if m != nil {
		return m.UserType
	}
	return 0
}

func (m *DeviceInfo) GetOnline() int32 {
	if m != nil {
		return m.Online
	}
	return 0
}

func (m *DeviceInfo) GetGrpRole() int32 {
	if m != nil {
		return m.GrpRole
	}
	return 0
}

func (m *DeviceInfo) GetIsFriend() bool {
	if m != nil {
		return m.IsFriend
	}
	return false
}

func (m *DeviceInfo) GetCharge() int32 {
	if m != nil {
		return m.Charge
	}
	return 0
}

func (m *DeviceInfo) GetStartLog() string {
	if m != nil {
		return m.StartLog
	}
	return ""
}

func (m *DeviceInfo) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *DeviceInfo) GetUserStatus() int32 {
	if m != nil {
		return m.UserStatus
	}
	return 0
}

func (m *DeviceInfo) GetInLinkQuality() int32 {
	if m != nil {
		return m.InLinkQuality
	}
	return 0
}

func (m *DeviceInfo) GetInMediaLinkQuality() int32 {
	if m != nil {
		return m.InMediaLinkQuality
	}
	return 0
}

func (m *DeviceInfo) GetOutLinkQuality() int32 {
	if m != nil {
		return m.OutLinkQuality
	}
	return 0
}

func (m *DeviceInfo) GetOutMediaLinkQuality() int32 {
	if m != nil {
		return m.OutMediaLinkQuality
	}
	return 0
}

func (m *DeviceInfo) GetRtt() int32 {
	if m != nil {
		return m.Rtt
	}
	return 0
}

// 移除某个组
type GroupDelReq struct {
	Uid                  int32    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	RoleType             int32    `protobuf:"varint,2,opt,name=role_type,json=roleType,proto3" json:"role_type,omitempty"`
	Gid                  int32    `protobuf:"varint,3,opt,name=gid,proto3" json:"gid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupDelReq) Reset()         { *m = GroupDelReq{} }
func (m *GroupDelReq) String() string { return proto.CompactTextString(m) }
func (*GroupDelReq) ProtoMessage()    {}
func (*GroupDelReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e22deedf62cfd44, []int{6}
}

func (m *GroupDelReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupDelReq.Unmarshal(m, b)
}
func (m *GroupDelReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupDelReq.Marshal(b, m, deterministic)
}
func (m *GroupDelReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupDelReq.Merge(m, src)
}
func (m *GroupDelReq) XXX_Size() int {
	return xxx_messageInfo_GroupDelReq.Size(m)
}
func (m *GroupDelReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupDelReq.DiscardUnknown(m)
}

var xxx_messageInfo_GroupDelReq proto.InternalMessageInfo

func (m *GroupDelReq) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *GroupDelReq) GetRoleType() int32 {
	if m != nil {
		return m.RoleType
	}
	return 0
}

func (m *GroupDelReq) GetGid() int32 {
	if m != nil {
		return m.Gid
	}
	return 0
}

type GroupDelRsp struct {
	Res                  *Result  `protobuf:"bytes,1,opt,name=res,proto3" json:"res,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupDelRsp) Reset()         { *m = GroupDelRsp{} }
func (m *GroupDelRsp) String() string { return proto.CompactTextString(m) }
func (*GroupDelRsp) ProtoMessage()    {}
func (*GroupDelRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e22deedf62cfd44, []int{7}
}

func (m *GroupDelRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupDelRsp.Unmarshal(m, b)
}
func (m *GroupDelRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupDelRsp.Marshal(b, m, deterministic)
}
func (m *GroupDelRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupDelRsp.Merge(m, src)
}
func (m *GroupDelRsp) XXX_Size() int {
	return xxx_messageInfo_GroupDelRsp.Size(m)
}
func (m *GroupDelRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupDelRsp.DiscardUnknown(m)
}

var xxx_messageInfo_GroupDelRsp proto.InternalMessageInfo

func (m *GroupDelRsp) GetRes() *Result {
	if m != nil {
		return m.Res
	}
	return nil
}

func init() {
	proto.RegisterType((*Group)(nil), "talk_cloud.Group")
	proto.RegisterType((*Member)(nil), "talk_cloud.Member")
	proto.RegisterType((*Result)(nil), "talk_cloud.Result")
	proto.RegisterType((*Wifi)(nil), "talk_cloud.Wifi")
	proto.RegisterType((*GroupInfo)(nil), "talk_cloud.GroupInfo")
	proto.RegisterType((*DeviceInfo)(nil), "talk_cloud.DeviceInfo")
	proto.RegisterType((*GroupDelReq)(nil), "talk_cloud.GroupDelReq")
	proto.RegisterType((*GroupDelRsp)(nil), "talk_cloud.GroupDelRsp")
}

func init() { proto.RegisterFile("talk_cloud_model.proto", fileDescriptor_7e22deedf62cfd44) }

var fileDescriptor_7e22deedf62cfd44 = []byte{
	// 947 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x55, 0xdd, 0x6e, 0x1b, 0x37,
	0x13, 0x85, 0xfe, 0xa5, 0x91, 0x7f, 0xf4, 0x31, 0x8e, 0xc2, 0xd8, 0xc9, 0x67, 0x55, 0x2d, 0x0a,
	0xf7, 0xc6, 0x40, 0xe3, 0x57, 0x70, 0x1b, 0x18, 0x90, 0x53, 0x74, 0x13, 0xa0, 0x97, 0x0b, 0x7a,
	0x49, 0x6f, 0x08, 0x73, 0x97, 0x1b, 0x92, 0x6b, 0xd7, 0x2f, 0xd1, 0x67, 0xea, 0xeb, 0xf4, 0x05,
	0x7a, 0x5d, 0xcc, 0x70, 0x57, 0x92, 0xe5, 0x14, 0xbd, 0xdb, 0x39, 0x67, 0x86, 0x33, 0x9c, 0x39,
	0x9c, 0x85, 0x79, 0x10, 0xe6, 0x2e, 0xcd, 0x8c, 0xad, 0x65, 0x5a, 0x58, 0xa9, 0xcc, 0x79, 0xe5,
	0x6c, 0xb0, 0x0c, 0x36, 0xf8, 0xb2, 0x80, 0xc1, 0x7b, 0x67, 0xeb, 0x8a, 0x1d, 0x40, 0x57, 0x4b,
	0xde, 0x59, 0x74, 0xce, 0x06, 0x49, 0x57, 0x4b, 0xf6, 0x16, 0x20, 0x47, 0x22, 0x2d, 0x45, 0xa1,
	0x78, 0x77, 0xd1, 0x39, 0x9b, 0x24, 0x13, 0x42, 0x3e, 0x88, 0x42, 0x21, 0x2d, 0xb2, 0xcc, 0xd6,
	0x65, 0x48, 0xb5, 0xe4, 0x3d, 0x0a, 0x9b, 0x34, 0xc8, 0x95, 0x64, 0x73, 0x18, 0xfa, 0x20, 0x42,
	0xed, 0x79, 0x9f, 0xa8, 0xc6, 0x5a, 0xfe, 0xd9, 0x85, 0xe1, 0xb5, 0x2a, 0x6e, 0x94, 0x7b, 0x96,
	0x90, 0x41, 0x5f, 0x5f, 0x2b, 0xdd, 0xa4, 0xa2, 0x6f, 0x76, 0x0c, 0xe3, 0xda, 0x2b, 0x87, 0x19,
	0x29, 0xc7, 0x24, 0x59, 0xdb, 0xc8, 0x95, 0x3a, 0xbb, 0x23, 0xae, 0x1f, 0xb9, 0xd6, 0x66, 0x33,
	0xe8, 0x55, 0x0f, 0x92, 0x0f, 0x08, 0xc6, 0xcf, 0xf6, 0xa4, 0x4f, 0x8f, 0x95, 0xe2, 0x43, 0xca,
	0xb9, 0xb6, 0xd9, 0x1b, 0xd8, 0x54, 0xce, 0x47, 0xbb, 0x57, 0x39, 0x86, 0x71, 0x25, 0x9c, 0x22,
	0x72, 0x1c, 0xf3, 0xb4, 0x36, 0x5e, 0xd3, 0x96, 0x46, 0x97, 0x8a, 0x4f, 0xe2, 0x35, 0xa3, 0xc5,
	0x16, 0x30, 0x35, 0x36, 0xbb, 0xa3, 0xce, 0x5e, 0x49, 0x0e, 0x44, 0x6e, 0x43, 0x98, 0xf3, 0x7d,
	0x62, 0x8d, 0xa2, 0x82, 0xa6, 0x31, 0xe7, 0x1a, 0xc0, 0x9c, 0x1f, 0x83, 0x70, 0x61, 0x65, 0x73,
	0xbe, 0x17, 0xab, 0x6d, 0xed, 0xe5, 0x39, 0x0c, 0x13, 0xe5, 0x6b, 0x13, 0xb0, 0x63, 0x99, 0x95,
	0x8a, 0x7a, 0xd8, 0x4b, 0xe8, 0x1b, 0x6f, 0x5e, 0xf8, 0xbc, 0x69, 0x22, 0x7e, 0x2e, 0xff, 0xe8,
	0x40, 0xff, 0x37, 0x7d, 0xab, 0xd9, 0x11, 0x0c, 0x8c, 0xba, 0x57, 0xa6, 0xe9, 0x79, 0x34, 0x10,
	0xbd, 0xf1, 0xfe, 0x4a, 0x36, 0x21, 0xd1, 0xc0, 0xf2, 0x8c, 0x2d, 0x73, 0x1d, 0x6a, 0x19, 0x3b,
	0xdf, 0x49, 0x36, 0x00, 0x96, 0x67, 0x44, 0x88, 0x64, 0x9f, 0xc8, 0xb5, 0xdd, 0x8c, 0x75, 0xb0,
	0x1e, 0xeb, 0x0c, 0x7a, 0x52, 0x79, 0xea, 0xf9, 0x24, 0xc1, 0xcf, 0xe5, 0x5f, 0x1d, 0x98, 0xc4,
	0x36, 0x94, 0xb7, 0x16, 0xf9, 0x7c, 0xad, 0x03, 0xfc, 0xfc, 0x2f, 0xe5, 0x7d, 0x0b, 0xfb, 0x91,
	0x2e, 0x44, 0x29, 0x72, 0xe5, 0x78, 0x6f, 0xd1, 0x3b, 0x1b, 0x24, 0x7b, 0x04, 0x5e, 0x47, 0x8c,
	0x9d, 0xc2, 0x34, 0x3a, 0xd9, 0x87, 0x52, 0xb9, 0x66, 0xe2, 0xf1, 0xd8, 0x5f, 0x10, 0x61, 0x17,
	0x30, 0xc1, 0xf9, 0xa7, 0x46, 0xfb, 0xc0, 0xfb, 0x8b, 0xde, 0xd9, 0xf4, 0xdd, 0xfc, 0x7c, 0xf3,
	0x2e, 0xce, 0x2f, 0xd5, 0xbd, 0xce, 0x14, 0x56, 0x18, 0x85, 0xb2, 0xd2, 0x3e, 0x30, 0x0e, 0x23,
	0xed, 0x7f, 0xfa, 0x1d, 0x43, 0xf0, 0x82, 0xe3, 0xa4, 0x35, 0xb7, 0xf4, 0x3e, 0x7a, 0xa2, 0xf7,
	0xbf, 0x47, 0x00, 0x9b, 0xa3, 0xbe, 0xaa, 0xf9, 0x62, 0x4b, 0xf3, 0x85, 0xd2, 0xec, 0xa4, 0xa9,
	0xac, 0xfc, 0x17, 0xd1, 0x57, 0xc2, 0xfb, 0x07, 0xeb, 0x64, 0x2b, 0xfa, 0xd6, 0xde, 0x79, 0x92,
	0x83, 0x5d, 0x1d, 0x9f, 0xc2, 0x34, 0x73, 0x4a, 0x04, 0x95, 0x06, 0x5d, 0xa8, 0x66, 0x20, 0x10,
	0xa1, 0x4f, 0xba, 0x50, 0xec, 0x15, 0x8c, 0x56, 0xab, 0x48, 0x8e, 0x88, 0x1c, 0xae, 0x56, 0x44,
	0x60, 0xe4, 0x67, 0x51, 0xe6, 0x4d, 0xe4, 0xb8, 0x89, 0x24, 0x88, 0x1c, 0xe6, 0x30, 0xcc, 0x6c,
	0xed, 0x7c, 0x7c, 0x06, 0xdd, 0xa4, 0xb1, 0xb0, 0x22, 0x63, 0x33, 0x61, 0x62, 0x1c, 0xbe, 0x82,
	0x3e, 0xca, 0x28, 0x13, 0x86, 0xc2, 0x9e, 0x88, 0x6c, 0xba, 0x2b, 0xb2, 0x53, 0x98, 0x4a, 0xea,
	0x5c, 0x1a, 0xf0, 0x8d, 0xec, 0xc5, 0xac, 0x11, 0x6a, 0x1f, 0xc9, 0x5a, 0x85, 0xfb, 0x3b, 0x2a,
	0x3c, 0x82, 0x81, 0xaf, 0x94, 0x92, 0xfc, 0x80, 0x0a, 0x8a, 0x06, 0x1e, 0x29, 0xb2, 0xa0, 0xef,
	0x9b, 0x8b, 0x1c, 0xc6, 0x23, 0x23, 0x44, 0x15, 0x9d, 0xc0, 0xc4, 0x0b, 0xd3, 0xd0, 0xb3, 0xd8,
	0x5f, 0x04, 0x5a, 0x12, 0x17, 0x4c, 0x1c, 0xcc, 0xff, 0x76, 0x36, 0x0e, 0x87, 0xd1, 0x8d, 0x08,
	0x41, 0xb9, 0x47, 0xce, 0xa8, 0xf3, 0xad, 0xc9, 0x7e, 0x80, 0xd9, 0x83, 0xbe, 0xd5, 0xa9, 0x54,
	0x3e, 0x73, 0xba, 0x0a, 0xda, 0x96, 0xfc, 0x05, 0x45, 0x1f, 0x22, 0x7e, 0xb9, 0x81, 0xd9, 0x12,
	0xf6, 0x71, 0x47, 0xa4, 0x51, 0xba, 0x5a, 0xf2, 0xa3, 0xe7, 0x8b, 0xa3, 0x95, 0x07, 0x35, 0xe5,
	0xe5, 0xce, 0x26, 0xdb, 0xec, 0xa3, 0xf9, 0x93, 0x7d, 0xf4, 0x1a, 0xc6, 0xb9, 0xab, 0x52, 0x67,
	0x8d, 0xe2, 0xaf, 0x62, 0x79, 0xb9, 0xab, 0x70, 0xdd, 0x60, 0x17, 0xb5, 0xff, 0xd9, 0x69, 0x55,
	0x4a, 0xce, 0x49, 0xd4, 0x6b, 0x9b, 0xe6, 0xfa, 0x59, 0xb8, 0x5c, 0xf1, 0xd7, 0xf1, 0xb8, 0x68,
	0x51, 0x9b, 0x70, 0x1d, 0xa5, 0xc6, 0xe6, 0xfc, 0xb8, 0x69, 0x53, 0xb3, 0x9f, 0x50, 0x46, 0x54,
	0xa0, 0x96, 0xfc, 0x24, 0x46, 0xa1, 0x19, 0x05, 0x48, 0x44, 0xf3, 0x50, 0xde, 0xc4, 0x37, 0x89,
	0xd0, 0x47, 0x42, 0xd8, 0xf7, 0x70, 0xa8, 0xcb, 0xd4, 0xe8, 0xf2, 0x2e, 0xfd, 0x52, 0x0b, 0xa3,
	0xc3, 0x23, 0x7f, 0x4b, 0x4e, 0xfb, 0xba, 0x5c, 0xe9, 0xf2, 0xee, 0xd7, 0x08, 0xb2, 0x1f, 0xe1,
	0xa5, 0x2e, 0xd3, 0x42, 0x49, 0x2d, 0x9e, 0x7a, 0xff, 0x9f, 0xbc, 0x99, 0x2e, 0xaf, 0x91, 0xdb,
	0x0e, 0x39, 0x83, 0x99, 0xad, 0xc3, 0x53, 0xef, 0x53, 0xf2, 0x3e, 0xb0, 0x75, 0xd8, 0xf6, 0xbc,
	0x80, 0x39, 0x7a, 0x7e, 0xe5, 0xf4, 0x05, 0xf9, 0xbf, 0xb0, 0x75, 0x78, 0x76, 0xfc, 0x0c, 0x7a,
	0x2e, 0x04, 0xfe, 0x4d, 0x5c, 0x62, 0x2e, 0x84, 0xe5, 0x07, 0x98, 0xd2, 0xc4, 0x2e, 0x95, 0x49,
	0xd4, 0x17, 0x74, 0xa8, 0x37, 0x5b, 0xae, 0xd6, 0x34, 0x47, 0x1c, 0x47, 0x9c, 0x63, 0x37, 0xce,
	0xd1, 0xb5, 0xfb, 0xbf, 0x59, 0x8a, 0xbd, 0xf5, 0x52, 0x5c, 0x5e, 0x6c, 0x9d, 0xe7, 0x2b, 0xf6,
	0x1d, 0xf4, 0x9c, 0xf2, 0x74, 0xde, 0xf4, 0x1d, 0xdb, 0x5e, 0x5c, 0xf1, 0xdf, 0x90, 0x20, 0x7d,
	0x33, 0xa4, 0xff, 0xfd, 0xc5, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x08, 0xb2, 0x99, 0xd5, 0x09,
	0x08, 0x00, 0x00,
}
