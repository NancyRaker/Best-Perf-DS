// Code generated by protoc-gen-go. DO NOT EDIT.
// source: talk_cloud_web-gateway.proto

package talk_cloud

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 查询某个调度员名下的tag信息请求数据
type NotifyIpsChangedReq struct {
	// 调度员的Id
	AccountId            int32    `protobuf:"varint,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NotifyIpsChangedReq) Reset()         { *m = NotifyIpsChangedReq{} }
func (m *NotifyIpsChangedReq) String() string { return proto.CompactTextString(m) }
func (*NotifyIpsChangedReq) ProtoMessage()    {}
func (*NotifyIpsChangedReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_1eb5513ca2910ac9, []int{0}
}

func (m *NotifyIpsChangedReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NotifyIpsChangedReq.Unmarshal(m, b)
}
func (m *NotifyIpsChangedReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NotifyIpsChangedReq.Marshal(b, m, deterministic)
}
func (m *NotifyIpsChangedReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotifyIpsChangedReq.Merge(m, src)
}
func (m *NotifyIpsChangedReq) XXX_Size() int {
	return xxx_messageInfo_NotifyIpsChangedReq.Size(m)
}
func (m *NotifyIpsChangedReq) XXX_DiscardUnknown() {
	xxx_messageInfo_NotifyIpsChangedReq.DiscardUnknown(m)
}

var xxx_messageInfo_NotifyIpsChangedReq proto.InternalMessageInfo

func (m *NotifyIpsChangedReq) GetAccountId() int32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

// 查询Tags信息返回的数据
type NotifyIpsChangedResp struct {
	// 查询调度员名下所有的Tags信息
	Res                  *Result  `protobuf:"bytes,1,opt,name=Res,proto3" json:"Res,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NotifyIpsChangedResp) Reset()         { *m = NotifyIpsChangedResp{} }
func (m *NotifyIpsChangedResp) String() string { return proto.CompactTextString(m) }
func (*NotifyIpsChangedResp) ProtoMessage()    {}
func (*NotifyIpsChangedResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_1eb5513ca2910ac9, []int{1}
}

func (m *NotifyIpsChangedResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NotifyIpsChangedResp.Unmarshal(m, b)
}
func (m *NotifyIpsChangedResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NotifyIpsChangedResp.Marshal(b, m, deterministic)
}
func (m *NotifyIpsChangedResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotifyIpsChangedResp.Merge(m, src)
}
func (m *NotifyIpsChangedResp) XXX_Size() int {
	return xxx_messageInfo_NotifyIpsChangedResp.Size(m)
}
func (m *NotifyIpsChangedResp) XXX_DiscardUnknown() {
	xxx_messageInfo_NotifyIpsChangedResp.DiscardUnknown(m)
}

var xxx_messageInfo_NotifyIpsChangedResp proto.InternalMessageInfo

func (m *NotifyIpsChangedResp) GetRes() *Result {
	if m != nil {
		return m.Res
	}
	return nil
}

func init() {
	proto.RegisterType((*NotifyIpsChangedReq)(nil), "talk_cloud.NotifyIpsChangedReq")
	proto.RegisterType((*NotifyIpsChangedResp)(nil), "talk_cloud.NotifyIpsChangedResp")
}

func init() { proto.RegisterFile("talk_cloud_web-gateway.proto", fileDescriptor_1eb5513ca2910ac9) }

var fileDescriptor_1eb5513ca2910ac9 = []byte{
	// 190 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x29, 0x49, 0xcc, 0xc9,
	0x8e, 0x4f, 0xce, 0xc9, 0x2f, 0x4d, 0x89, 0x2f, 0x4f, 0x4d, 0xd2, 0x4d, 0x4f, 0x2c, 0x49, 0x2d,
	0x4f, 0xac, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x42, 0xc8, 0x4a, 0x89, 0x21, 0xa9,
	0xcc, 0xcd, 0x4f, 0x49, 0xcd, 0x81, 0xa8, 0x51, 0x32, 0xe6, 0x12, 0xf6, 0xcb, 0x2f, 0xc9, 0x4c,
	0xab, 0xf4, 0x2c, 0x28, 0x76, 0xce, 0x48, 0xcc, 0x4b, 0x4f, 0x4d, 0x09, 0x4a, 0x2d, 0x14, 0x92,
	0xe1, 0xe2, 0x4c, 0x4c, 0x4e, 0xce, 0x2f, 0xcd, 0x2b, 0xf1, 0x4c, 0x91, 0x60, 0x54, 0x60, 0xd4,
	0x60, 0x0d, 0x42, 0x08, 0x28, 0xd9, 0x70, 0x89, 0x60, 0x6a, 0x2a, 0x2e, 0x10, 0x52, 0xe1, 0x62,
	0x0e, 0x4a, 0x2d, 0x06, 0xab, 0xe7, 0x36, 0x12, 0xd2, 0x43, 0x58, 0xa9, 0x17, 0x94, 0x5a, 0x5c,
	0x9a, 0x53, 0x12, 0x04, 0x92, 0x36, 0xca, 0xe0, 0xe2, 0x0d, 0x4f, 0x4d, 0xf2, 0x0c, 0x28, 0x0e,
	0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0x15, 0x0a, 0xe7, 0x12, 0x40, 0x37, 0x4e, 0x48, 0x1e, 0x59,
	0x37, 0x16, 0x17, 0x4a, 0x29, 0xe0, 0x57, 0x50, 0x5c, 0xa0, 0xc4, 0x90, 0xc4, 0x06, 0xf6, 0xa3,
	0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x7f, 0xd9, 0xbb, 0xa5, 0x27, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WebIPsServiceClient is the client API for WebIPsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WebIPsServiceClient interface {
	// 通知调度员和设备去从新获取ips
	NotifyIpsChanged(ctx context.Context, in *NotifyIpsChangedReq, opts ...grpc.CallOption) (*NotifyIpsChangedResp, error)
}

type webIPsServiceClient struct {
	cc *grpc.ClientConn
}

func NewWebIPsServiceClient(cc *grpc.ClientConn) WebIPsServiceClient {
	return &webIPsServiceClient{cc}
}

func (c *webIPsServiceClient) NotifyIpsChanged(ctx context.Context, in *NotifyIpsChangedReq, opts ...grpc.CallOption) (*NotifyIpsChangedResp, error) {
	out := new(NotifyIpsChangedResp)
	err := c.cc.Invoke(ctx, "/talk_cloud.WebIPsService/NotifyIpsChanged", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WebIPsServiceServer is the server API for WebIPsService service.
type WebIPsServiceServer interface {
	// 通知调度员和设备去从新获取ips
	NotifyIpsChanged(context.Context, *NotifyIpsChangedReq) (*NotifyIpsChangedResp, error)
}

// UnimplementedWebIPsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedWebIPsServiceServer struct {
}

func (*UnimplementedWebIPsServiceServer) NotifyIpsChanged(ctx context.Context, req *NotifyIpsChangedReq) (*NotifyIpsChangedResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NotifyIpsChanged not implemented")
}

func RegisterWebIPsServiceServer(s *grpc.Server, srv WebIPsServiceServer) {
	s.RegisterService(&_WebIPsService_serviceDesc, srv)
}

func _WebIPsService_NotifyIpsChanged_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NotifyIpsChangedReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebIPsServiceServer).NotifyIpsChanged(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/talk_cloud.WebIPsService/NotifyIpsChanged",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebIPsServiceServer).NotifyIpsChanged(ctx, req.(*NotifyIpsChangedReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _WebIPsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "talk_cloud.WebIPsService",
	HandlerType: (*WebIPsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NotifyIpsChanged",
			Handler:    _WebIPsService_NotifyIpsChanged_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "talk_cloud_web-gateway.proto",
}
